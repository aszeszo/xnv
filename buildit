#!/bin/ksh93
#
# buildit
# Script for building OpenSolaris X Consolidation
#
###########################################################################
#
# Copyright (c) 1996, 2010, Oracle and/or its affiliates. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
#
###########################################################################
#
#

# Add /usr/bin to front of path in case user has /usr/gnu/bin default
# Add /usr/sbin to path for dtrace (to build probes in X servers)

PATH=/usr/bin:${PATH}:/usr/sbin
export PATH

progname="$0"
function fatal_error
{
    print -u2 "${progname}: ERROR: $*"
    exit 1
}

MAKE_PKGS=0
VERBOSE_FLAGS=""	# verbosity flag passed to xmake/make_release_packages
PUBLISHER_FLAGS=""

while getopts pP:v i; do
    case $i in
	p) MAKE_PKGS=1 ;;
	v) VERBOSE_FLAGS="-v" ;;
	P) PUBLISHER_FLAGS="-p $OPTARG" ;;
	?) print -u2 "USAGE: $0 [-p [-P publisher]] [-v]"; exit 2 ;;
    esac
done

shift $(($OPTIND-1))

if [[ $? != 0 ]] ; then
    print -u2 "USAGE: $0 [-p [-P publisher]] [-v]"
    exit 2
fi

[ -d log ] || mkdir log

# Send all further output & errors to the log file
exec > log/buildit-XW 2>&1

# Find hg id and export it so set-elf-comments.pl doesn't have to re-run
# for every module built
hg_id() {
    hg id -it | read rev tag
    case "${tag}" in
        tip)	print "${rev}" ;;
        *)	print "${tag}" ;;
    esac
}
export XBUILD_HG_ID="$(hg_id)"

START="$(perl -e 'print time')"

print "------------------------------------------------------------------------------"
print "Building gate at hg id: ${XBUILD_HG_ID}"
print -n "Start time: " ; date
print -n "Building on: " ; uname -a
print "Using these compilers: "
whence cc gcc
# Make sure Sun C compiler is at least version 5.10 (Studio 12 Update 1)
cc -V 2>&1 | perl -n -e 'if (($_ =~ m| C (\d+).(\d+)|)) { \
    print $_ ; print "*** Compiler too old!\n" if ( ($1 != 5) || ($2 < 10) ) }'
gcc -v

# Exported to stop Sun compilers from reporting home on each usage
export SUNW_NO_UPDATE_NOTIFY='true'
export UT_NO_USAGE_TRACKING='1'

print "Using these environment variables: "
env
print "------------------------------------------------------------------------------"

MACH="$(uname -p)"

# Remove old proto area & package area to clean after moving to new locations
if [ "${MACH}" = "i386" ]; then
    /bin/rm -rf proto-i386-svr4
else
    /bin/rm -rf proto-sun4-svr4
fi
/bin/rm -rf proto-packages

# Clean new proto areas for this architecture
/bin/rm -rf "proto/root_${MACH}" "proto/metadata_${MACH}" \
    "proto/pkg_${MACH}" "proto/tools_${MACH}"

XMAKE="$(pwd)/open-src/util/build-tools/xmake ${VERBOSE_FLAGS} -k"

${XMAKE} setup || fatal_error "make setup failed: cannot build"

cd open-src
# Run as two steps to avoid race between cleaning & rebuilding when
# using parallel make
${XMAKE} clean
${XMAKE} install
cd ..

print "\nFinished building the X Window System Consolidation for OpenSolaris.\n"
print -n "Finish time: " ; date
perl -e '$runtime = time - $ARGV[0];
	 printf("Runtime: %d:%02d\n", $runtime/3600, ($runtime%3600)/60); ' \
	"${START}"

if [ "${MAKE_PKGS}" = 1 ] ; then
    ./make_release_packages ${PUBLISHER_FLAGS} ${VERBOSE_FLAGS}
fi
