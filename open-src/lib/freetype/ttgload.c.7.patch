# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
--- freetype-2.3.9/src/truetype/ttgload.c	2008-12-08 15:56:55.000000000 -0800
+++ freetype-2.3.9/src/truetype/ttgload.c	2009-10-25 20:56:57.442263760 -0700
@@ -647,7 +647,7 @@
       FT_ARRAY_COPY( zone->org, zone->cur, zone->n_points );
 
     /* Reset graphics state. */
-    loader->exec->GS = ((TT_Size)loader->size)->GS;
+    loader->exec->FT_GS = ((TT_Size)loader->size)->FT_GS;
 
     /* XXX: UNDOCUMENTED! Hinting instructions of a composite glyph */
     /*      completely refer to the (already) hinted subglyphs.     */
@@ -693,6 +693,7 @@
                        ((TT_Size)loader->size)->debug             );
 
       error = TT_Run_Context( loader->exec, debug );
+
       if ( error && loader->exec->pedantic_hinting )
         return error;
     }
@@ -1817,12 +1818,12 @@
       }
 
       /* see whether the cvt program has disabled hinting */
-      if ( exec->GS.instruct_control & 1 )
+      if ( exec->FT_GS.instruct_control & 1 )
         load_flags |= FT_LOAD_NO_HINTING;
 
       /* load default graphics state -- if needed */
-      if ( exec->GS.instruct_control & 2 )
-        exec->GS = tt_default_graphics_state;
+      if ( exec->FT_GS.instruct_control & 2 )
+        exec->FT_GS = tt_default_graphics_state;
 
       exec->pedantic_hinting = FT_BOOL( load_flags & FT_LOAD_PEDANTIC );
       loader->exec = exec;
@@ -1974,10 +1975,10 @@
 
       if ( IS_HINTED( load_flags ) )
       {
-        if ( loader.exec->GS.scan_control )
+        if ( loader.exec->FT_GS.scan_control )
         {
           /* convert scan conversion mode to FT_OUTLINE_XXX flags */
-          switch ( loader.exec->GS.scan_type )
+          switch ( loader.exec->FT_GS.scan_type )
           {
           case 0: /* simple drop-outs including stubs */
             glyph->outline.flags |= FT_OUTLINE_INCLUDE_STUBS;
