From 504a1d8521885509695c74a65ea9a97ac7904d3c Mon Sep 17 00:00:00 2001
From: Alan Coopersmith <alan.coopersmith@oracle.com>
Date: Mon, 4 Apr 2011 16:32:45 -0700
Subject: [PATCH] Use special path to sockets when running under Solaris Trusted Extensions

Solaris Trusted Extensions puts the endpoints for the X server's Unix
domain sockets in a special directory shared from the global zone to
each of the labeled zones, since each labeled zone has a separate /tmp.

Signed-off-by: Alan Coopersmith <alan.coopersmith@oracle.com>
Reviewed-by: Peter Harris <pharris@opentext.com>
---
 configure.ac   |    4 ++++
 src/xcb_util.c |   23 +++++++++++++++++++++++
 2 files changed, 27 insertions(+), 0 deletions(-)

diff --git a/configure.ac b/configure.ac
index 4178989..ddd983a 100644
--- a/configure.ac
+++ b/configure.ac
@@ -95,6 +95,10 @@ AC_CHECK_MEMBER([struct sockaddr_un.sun_len],
 		  #include <sys/un.h>
 		])
 
+dnl check for support for Solaris Trusted Extensions
+AC_CHECK_HEADERS([tsol/label.h])
+AC_CHECK_FUNCS([is_system_labeled])
+
 xcbincludedir='${includedir}/xcb'
 AC_SUBST(xcbincludedir)
 
diff --git a/src/xcb_util.c b/src/xcb_util.c
index 5a82ac1..6782ee4 100644
--- a/src/xcb_util.c
+++ b/src/xcb_util.c
@@ -43,12 +43,18 @@
 #include <stddef.h>
 #include <unistd.h>
 #include <fcntl.h>
+#include <sys/stat.h>
 #include <string.h>
 
 #include "xcb.h"
 #include "xcbext.h"
 #include "xcbint.h"
 
+/* must be after "xcbint.h" to get autoconf #defines */
+#if HAVE_TSOL_LABEL_H
+# include <tsol/label.h>
+#endif
+
 static const int error_connection = 1;
 
 int xcb_popcount(uint32_t mask)
@@ -188,6 +194,23 @@ static int _xcb_open(const char *host, char *protocol, const int display)
             }
     }
 
+#if defined(HAVE_TSOL_LABEL_H) && defined(HAVE_IS_SYSTEM_LABELED)
+    /* Check special path for Unix sockets under Solaris Trusted Extensions */
+    if (is_system_labeled())
+    {
+	struct stat sbuf;
+	const char *tsol_base = "/var/tsol/doors/.X11-unix/X";
+	char tsol_socket[PATH_MAX];
+
+	snprintf(tsol_socket, sizeof(tsol_socket), "%s%d", tsol_base, display);
+
+	if (stat(tsol_socket, &sbuf) == 0)
+	{
+	    base = tsol_base;
+	}
+    }
+#endif
+
     filelen = strlen(base) + 1 + sizeof(display) * 3 + 1;
     file = malloc(filelen);
     if(file == NULL)
-- 
1.7.3.2

