From 64b7f96dca23d2b33e0b8a8785d628d9a2f50e7b Mon Sep 17 00:00:00 2001
From: Alan Coopersmith <alan.coopersmith@sun.com>
Date: Fri, 24 Apr 2009 00:14:12 -0700
Subject: [PATCH] Add SIGIO/SIGPOLL support for Solaris

Signed-off-by: Alan Coopersmith <alan.coopersmith@sun.com>
---
 configure.ac                              |    2 +-
 hw/xfree86/os-support/shared/sigio.c      |   42 ++++++++++++++++++++++++----
 hw/xfree86/os-support/solaris/Makefile.am |    3 +-
 include/xorg-config.h.in                  |    3 ++
 4 files changed, 42 insertions(+), 8 deletions(-)

diff --git a/configure.ac b/configure.ac
index ef50627..f0317bd 100644
--- a/configure.ac
+++ b/configure.ac
@@ -113,7 +113,7 @@ AM_CONDITIONAL(XSERVER_DTRACE, [test "x$WDTRACE" != "xno"])
 
 AC_HEADER_DIRENT
 AC_HEADER_STDC
-AC_CHECK_HEADERS([fcntl.h stdlib.h string.h unistd.h dlfcn.h])
+AC_CHECK_HEADERS([fcntl.h stdlib.h string.h unistd.h dlfcn.h stropts.h])
 
 dnl Checks for typedefs, structures, and compiler characteristics.
 AC_C_CONST
diff --git a/hw/xfree86/os-support/shared/sigio.c b/hw/xfree86/os-support/shared/sigio.c
index 54c02cc..2565782 100644
--- a/hw/xfree86/os-support/shared/sigio.c
+++ b/hw/xfree86/os-support/shared/sigio.c
@@ -63,6 +63,10 @@
 # include "xf86_OSlib.h"
 # include "inputstr.h"
 
+#ifdef HAVE_STROPTS_H
+# include <stropts.h>
+#endif
+
 /*
  * Linux libc5 defines FASYNC, but not O_ASYNC.  Don't know if it is
  * functional or not.
@@ -139,6 +143,7 @@ xf86InstallSIGIOHandler(int fd, void (*f)(int, void *), void *closure)
     struct sigaction osa;
     int	i;
     int blocked;
+    int installed = FALSE;
 
     for (i = 0; i < MAX_FUNCS; i++)
     {
@@ -147,15 +152,30 @@ xf86InstallSIGIOHandler(int fd, void (*f)(int, void *), void *closure)
 	    if (xf86IsPipe (fd))
 		return 0;
 	    blocked = xf86BlockSIGIO();
+#ifdef O_ASYNC
 	    if (fcntl(fd, F_SETFL, fcntl(fd, F_GETFL) | O_ASYNC) == -1) {
-		xf86Msg(X_WARNING, "fcntl(%d, O_ASYNC): %s\n", 
+		xf86Msg(X_WARNING, "fcntl(%d, O_ASYNC): %s\n",
 			fd, strerror(errno));
-		xf86UnblockSIGIO(blocked);
-		return 0;
+	    } else {
+		if (fcntl(fd, F_SETOWN, getpid()) != -1) {
+		    xf86Msg(X_WARNING, "fcntl(%d, F_SETOWN): %s\n",
+			    fd, strerror(errno));
+		} else {
+		    installed = TRUE;
+		}
 	    }
-	    if (fcntl(fd, F_SETOWN, getpid()) == -1) {
-		xf86Msg(X_WARNING, "fcntl(%d, F_SETOWN): %s\n", 
-			fd, strerror(errno));
+#endif
+#ifdef I_SETSIG /* System V Streams - used on Solaris for input devices */
+	    if (!installed && isastream(fd)) {
+		if (ioctl(fd, I_SETSIG, S_INPUT | S_ERROR | S_HANGUP) == -1) {
+		    xf86Msg(X_WARNING, "fcntl(%d, I_SETSIG): %s\n",
+			    fd, strerror(errno));
+		} else {
+		    installed = TRUE;
+		}
+	    }
+#endif
+	    if (!installed) {
 		xf86UnblockSIGIO(blocked);
 		return 0;
 	    }
@@ -221,7 +241,17 @@ xf86RemoveSIGIOHandler(int fd)
     }
     if (ret)
     {
+#ifdef O_ASYNC
 	fcntl(fd, F_SETFL, fcntl(fd, F_GETFL) & ~O_ASYNC);
+#endif
+#ifdef I_SETSIG
+	if (isastream(fd)) {
+	    if (ioctl(fd, I_SETSIG, 0) == -1) {
+		xf86Msg(X_WARNING, "fcntl(%d, I_SETSIG, 0): %s\n",
+			fd, strerror(errno));
+	    }
+	}
+#endif
 	xf86SigIOMax = max;
 	xf86SigIOMaxFd = maxfd;
 	if (!max)
diff --git a/hw/xfree86/os-support/solaris/Makefile.am b/hw/xfree86/os-support/solaris/Makefile.am
index a4ef67b..bcb9874 100644
--- a/hw/xfree86/os-support/solaris/Makefile.am
+++ b/hw/xfree86/os-support/solaris/Makefile.am
@@ -21,7 +21,8 @@ noinst_LTLIBRARIES = libsolaris.la
 libsolaris_la_SOURCES = sun_init.c \
 	sun_vid.c sun_bell.c $(AGP_SRC) sun_apm.c \
 	$(srcdir)/../shared/kmod_noop.c \
-	$(srcdir)/../shared/posix_tty.c $(srcdir)/../shared/sigiostubs.c \
+	$(srcdir)/../shared/posix_tty.c \
+	$(srcdir)/../shared/sigio.c \
 	$(srcdir)/../shared/stdResource.c \
 	$(srcdir)/../shared/vidmem.c \
 	$(VTSW_SRC)
diff --git a/include/xorg-config.h.in b/include/xorg-config.h.in
index f9b77d0..ebeb44a 100644
--- a/include/xorg-config.h.in
+++ b/include/xorg-config.h.in
@@ -54,6 +54,9 @@
 /* Solaris 8 or later? */
 #undef __SOL8__
 
+/* Define to 1 if you have the <stropts.h> header file. */
+#undef HAVE_STROPTS_H
+
 /* Define to 1 if you have the <sys/kd.h> header file. */
 #undef HAVE_SYS_KD_H
 
-- 
1.5.6.5

