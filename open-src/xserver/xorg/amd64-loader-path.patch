# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, and/or sell copies of the Software, and to permit persons
# to whom the Software is furnished to do so, provided that the above
# copyright notice(s) and this permission notice appear in all copies of
# the Software and that both the above copyright notice(s) and this
# permission notice appear in supporting documentation.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
# OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
# INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
# FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
# NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
# WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# 
# Except as contained in this notice, the name of a copyright holder
# shall not be used in advertising or otherwise to promote the sale, use
# or other dealings in this Software without prior written authorization
# of the copyright holder.

diff -urp -x '*~' -x '*.orig' hw/xfree86/loader/loadmod.c hw/xfree86/loader/loadmod.c
--- hw/xfree86/loader/loadmod.c	2009-11-29 21:42:31.000000000 -0800
+++ hw/xfree86/loader/loadmod.c	2009-12-06 12:38:47.776703128 -0800
@@ -167,6 +167,13 @@ InitPathList(const char *path)
 		list[n][len - 1] = '/';
 		list[n][len] = '\0';
 	    }
+
+#ifdef SUNSOFT /* strip amd64/ off loader path if it's there */
+	    if (strcmp(list[n] + (len - 6), "amd64/") == 0) {
+		    list[n][len - 6] = '\0';
+	    }
+#endif
+	    
 	    n++;
 	}
 	elem = strtok(NULL, ",");
@@ -392,6 +399,18 @@ FindModuleInSubdir(const char *dirpath, 
     char *ret = NULL, tmpBuf[PATH_MAX];
     struct stat stat_buf;
 
+#if defined(SUNSOFT) && defined(__x86)
+    Bool in_64_dir = FALSE;
+
+    if (strstr(dirpath, "/amd64") != NULL) {
+# if !(defined(__amd64) || defined(__amd64__))
+       return NULL;
+# else
+       in_64_dir = TRUE;
+# endif
+    }
+#endif
+
     dir = opendir(dirpath);
     if (!dir)
         return NULL;
@@ -399,6 +418,13 @@ FindModuleInSubdir(const char *dirpath, 
     while ((direntry = readdir(dir))) {
         if (direntry->d_name[0] == '.')
             continue;
+
+#if defined(SUNSOFT) && (defined(__i386) || defined(__i386__))
+        /* skip 64-bit subdirectories when running 32-bit server */
+        if (strcmp(direntry->d_name, "amd64") == 0)
+            continue;
+#endif
+
         snprintf(tmpBuf, PATH_MAX, "%s%s/", dirpath, direntry->d_name);
 	/* the stat with the appended / fails for normal files,
 	   and works for sub dirs fine, looks a bit strange in strace
@@ -408,6 +434,12 @@ FindModuleInSubdir(const char *dirpath, 
                 break;
             continue;
         }
+
+#if defined(SUNSOFT) && (defined(__amd64) || defined(__amd64__))
+        /* Don't match files in non-amd64 directories */
+        if (!in_64_dir)
+            continue;
+#endif	
  
         snprintf(tmpBuf, PATH_MAX, "lib%s.so", module);
         if (strcmp(direntry->d_name, tmpBuf) == 0) {
