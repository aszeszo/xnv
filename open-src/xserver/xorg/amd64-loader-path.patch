# Copyright 2007 Sun Microsystems, Inc.  All rights reserved.
# Use subject to license terms.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, and/or sell copies of the Software, and to permit persons
# to whom the Software is furnished to do so, provided that the above
# copyright notice(s) and this permission notice appear in all copies of
# the Software and that both the above copyright notice(s) and this
# permission notice appear in supporting documentation.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
# OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
# INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
# FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
# NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
# WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# 
# Except as contained in this notice, the name of a copyright holder
# shall not be used in advertising or otherwise to promote the sale, use
# or other dealings in this Software without prior written authorization
# of the copyright holder.

diff -urp -x '*~' hw/xfree86/loader/loadmod.c hw/xfree86/loader/loadmod.c
--- hw/xfree86/loader/loadmod.c	2006-10-11 15:42:19.000000000 -0700
+++ hw/xfree86/loader/loadmod.c	2006-10-26 14:30:02.522460000 -0700
@@ -453,18 +453,37 @@ FindModule(const char *module, const cha
     const char **s;
 
     dirpath = (char *)dirname;
-    if (strlen(dirpath) > PATH_MAX)
+    dirlen = strlen(dirpath);
+    if (dirlen > PATH_MAX)
 	return NULL;
+
+    xf86MsgVerb(X_INFO, 4, "Loading module %s from path \"%s\"\n", module, dirname);
+
+#if defined(SUNSOFT) && (defined(__amd64) || defined(__amd64__))
+    const char *amd64subdir = "amd64/";
+    
+    if (strcmp(dirpath + (dirlen - 6), amd64subdir) == 0) {
+	dirpath = strdup(dirname);
+	dirpath[dirlen - 6] = '\0';
+    }
+#endif
     
     subdirs = InitSubdirs(subdirlist);
     if (!subdirs)
 	return NULL;
 
     for (s = subdirs; *s; s++) {
+#if defined(SUNSOFT) && (defined(__amd64) || defined(__amd64__))
+	if ((dirlen = strlen(dirpath) + strlen(*s) + sizeof(amd64subdir)) > PATH_MAX)
+#else
 	if ((dirlen = strlen(dirpath) + strlen(*s)) > PATH_MAX)
+#endif
 	    continue;
 	strcpy(buf, dirpath);
 	strcat(buf, *s);
+#if defined(SUNSOFT) && (defined(__amd64) || defined(__amd64__))
+	strcat(buf, amd64subdir);
+#endif		
         if ((name = FindModuleInSubdir(buf, module)))
             break;
     }
@@ -903,7 +922,7 @@ doLoadModule(const char *module, const c
      * check the elements in the path
      */
     if (PathIsAbsolute(module))
-	xstrdup(module);
+	found = xstrdup(module);
     path_elem = pathlist;
     while (!found && *path_elem != NULL) {
 	found = FindModule(m, *path_elem, subdirlist, patterns);
