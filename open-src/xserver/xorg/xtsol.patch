# Copyright (c) 2006, 2011, Oracle and/or its affiliates. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

diff --git a/Makefile.am b/Makefile.am
index b1408f2..54d64ab 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -17,6 +17,10 @@ if RECORD
 RECORD_DIR=record
 endif
 
+if BUILD_TSOL_MODULE
+TSOL_DIR=tsol
+endif
+
 SUBDIRS = \
 	doc \
 	man \
@@ -38,6 +42,7 @@ SUBDIRS = \
 	$(COMPOSITE_DIR) \
 	$(GLX_DIR) \
 	IA \
+	$(TSOL_DIR) \
 	exa \
 	config \
 	hw \
diff --git a/Xext/security.c b/Xext/security.c
index df5bd58..8825bb6 100644
--- a/Xext/security.c
+++ b/Xext/security.c
@@ -1138,3 +1138,27 @@ SecurityExtensionInit(INITARGS)
     /* Label objects that were created before we could register ourself */
     SecurityLabelInitial();
 }
+
+/* API needed for Xtsol module to get/set client trustLevel */
+_X_EXPORT unsigned int
+getClientTrustLevel(ClientPtr client)
+{
+    SecurityStateRec *state;
+
+    state = dixLookupPrivate(&client->devPrivates, stateKey);
+
+    return state->trustLevel;
+}
+
+_X_EXPORT unsigned int
+setClientTrustLevel(ClientPtr client, unsigned int newLevel)
+{
+    SecurityStateRec *state;
+    unsigned int oldLevel;
+
+    state = dixLookupPrivate(&client->devPrivates, stateKey);
+    oldLevel = state->trustLevel;
+    state->trustLevel = newLevel;
+    
+    return oldLevel;
+}
diff --git a/Xext/securitysrv.h b/Xext/securitysrv.h
index 3d3894a..8b7317f 100644
--- a/Xext/securitysrv.h
+++ b/Xext/securitysrv.h
@@ -80,4 +80,8 @@ typedef struct {
 /* Give this value or higher to the -audit option to get security messages */
 #define SECURITY_AUDIT_LEVEL 4
 
+/* API needed for Xtsol module to get/set client trustLevel */
+extern _X_EXPORT unsigned int getClientTrustLevel(ClientPtr client);
+extern _X_EXPORT unsigned int setClientTrustLevel(ClientPtr client, unsigned int newLevel);
+
 #endif /* _SECURITY_SRV_H */
diff --git a/configure.ac b/configure.ac
index 460da17..c3b310d 100644
--- a/configure.ac
+++ b/configure.ac
@@ -221,6 +221,14 @@ dnl Find the math libary, then check for cbrt function in it.
 AC_CHECK_LIB(m, sqrt)
 AC_CHECK_FUNCS([cbrt])
 
+dnl Check for libtsol for Solaris Trusted Extensions module
+AC_CHECK_LIB(tsol, bsllow, [BUILD_TSOL_MODULE=yes], [BUILD_TSOL_MODULE=no])
+AM_CONDITIONAL(BUILD_TSOL_MODULE, [test x$BUILD_TSOL_MODULE = xyes])
+if test "x$BUILD_TSOL_MODULE" = xyes; then
+	TSOL_LIB='$(top_builddir)/tsol/libxtsol.la'
+	TSOL_SYS_LIBS='-ltsol -ltsnet -lsecdb -lbsm'
+fi
+
 AC_CHECK_HEADERS([ndbm.h dbm.h rpcsvc/dbm.h])
 
 dnl AGPGART headers
@@ -1500,6 +1508,8 @@ AM_CONDITIONAL(XVFB, [test "x$XVFB" = xyes])
 if test "x$XVFB" = xyes; then
 	XVFB_LIBS="$FB_LIB $FIXES_LIB $XEXT_LIB $DBE_LIB $RECORD_LIB $GLX_LIBS $RANDR_LIB $RENDER_LIB $DAMAGE_LIB $MIEXT_SYNC_LIB $MIEXT_DAMAGE_LIB $MIEXT_SHADOW_LIB $XI_LIB $XKB_LIB $XKB_STUB_LIB $COMPOSITE_LIB"
 	XVFB_SYS_LIBS="$XVFBMODULES_LIBS $GLX_SYS_LIBS"
+	XVFB_LIBS="$XVFB_LIBS $TSOL_LIB"
+	XVFB_SYS_LIBS="$XVFB_SYS_LIBS $TSOL_SYS_LIBS"
 	AC_SUBST([XVFB_LIBS])
 	AC_SUBST([XVFB_SYS_LIBS])
 fi
@@ -1521,6 +1531,8 @@ if test "x$XNEST" = xyes; then
 	fi
 	XNEST_LIBS="$FB_LIB $FIXES_LIB $MI_LIB $XEXT_LIB $DBE_LIB $RECORD_LIB $GLX_LIBS $RANDR_LIB $RENDER_LIB $DAMAGE_LIB $MIEXT_SYNC_LIB $MIEXT_DAMAGE_LIB $MIEXT_SHADOW_LIB $XI_LIB $XKB_LIB $XKB_STUB_LIB $COMPOSITE_LIB $MAIN_LIB $DIX_LIB $OS_LIB"
 	XNEST_SYS_LIBS="$XNESTMODULES_LIBS $GLX_SYS_LIBS"
+	XNEST_LIBS="$XNEST_LIBS $TSOL_LIB"
+	XNEST_SYS_LIBS="$XNEST_SYS_LIBS $TSOL_SYS_LIBS"
 	AC_SUBST([XNEST_LIBS])
 	AC_SUBST([XNEST_SYS_LIBS])
 fi
@@ -2057,6 +2069,7 @@ if test "$KDRIVE" = yes; then
     KDRIVE_CFLAGS="$XSERVER_CFLAGS -DHAVE_KDRIVE_CONFIG_H $TSLIB_CFLAGS"
 
     KDRIVE_PURE_LIBS="$FB_LIB $MI_LIB $FIXES_LIB $XEXT_LIB $DBE_LIB $RECORD_LIB $GLX_LIBS $RANDR_LIB $RENDER_LIB $DAMAGE_LIB $MIEXT_SYNC_LIB $MIEXT_DAMAGE_LIB $MIEXT_SHADOW_LIB $XI_LIB $XKB_LIB $XKB_STUB_LIB $COMPOSITE_LIB $OS_LIB"
+    KDRIVE_PURE_LIBS="$KDRIVE_PURE_LIBS $TSOL_LIB"
     KDRIVE_LIB='$(top_builddir)/hw/kdrive/src/libkdrive.la'
     case $host_os in
 	*linux*)
@@ -2247,3 +2260,6 @@ xorg-server.pc
 
 # Add Sun IA extension
 AC_OUTPUT([IA/Makefile])
+
+# Add Sun Trusted Extensions extension
+AC_OUTPUT([tsol/Makefile])
diff --git a/dix/dispatch.c b/dix/dispatch.c
index 44c2433..e710ea4 100644
--- a/dix/dispatch.c
+++ b/dix/dispatch.c
@@ -74,8 +74,8 @@ Equipment Corporation.
 
 ******************************************************************/
 
-/* XSERVER_DTRACE additions:
- * Copyright (c) 2005-2006, Oracle and/or its affiliates. All rights reserved.
+/* 
+ * Copyright (c) 2005, 2006, Oracle and/or its affiliates. All rights reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a
  * copy of this software and associated documentation files (the "Software"),
@@ -163,6 +163,10 @@ int connBlockScreenStart;
 
 static void KillAllClients(void);
 
+#ifdef TSOL
+SecurityHookPtr pSecHook = NULL;
+#endif /* TSOL */
+
 static int nextFreeClientID; /* always MIN free client ID */
 
 static int	nClients;	/* number of authorized clients */
@@ -904,7 +908,12 @@ ProcCirculateWindow(ClientPtr client)
     return Success;
 }
 
-static int
+#ifdef TSOL
+_X_EXPORT
+#else
+static
+#endif
+int
 GetGeometry(ClientPtr client, xGetGeometryReply *rep)
 {
     DrawablePtr pDraw;
@@ -1997,7 +2006,12 @@ ProcPutImage(ClientPtr client)
      return Success;
 }
 
-static int
+#ifdef TSOL
+_X_EXPORT
+#else
+static
+#endif
+int
 DoGetImage(ClientPtr client, int format, Drawable drawable, 
            int x, int y, int width, int height, 
            Mask planemask, xGetImageReply **im_return)
diff --git a/dix/events.c b/dix/events.c
index 04d7fb5..e39b4f9 100644
--- a/dix/events.c
+++ b/dix/events.c
@@ -2842,6 +2842,9 @@ PointInBorderSize(WindowPtr pWin, int x, int y)
  *
  * @returns the window at the given coordinates.
  */
+#ifdef TSOL
+_X_EXPORT
+#endif
 WindowPtr
 XYToWindow(SpritePtr pSprite, int x, int y)
 {
diff --git a/dix/window.c b/dix/window.c
index 823294b..78cc845 100644
--- a/dix/window.c
+++ b/dix/window.c
@@ -97,6 +97,33 @@ Equipment Corporation.
 
 ******************************************************************/
 
+/* Copyright (c) 2006, Oracle and/or its affiliates. All rights reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the
+ * "Software"), to deal in the Software without restriction, including
+ * without limitation the rights to use, copy, modify, merge, publish,
+ * distribute, and/or sell copies of the Software, and to permit persons
+ * to whom the Software is furnished to do so, provided that the above
+ * copyright notice(s) and this permission notice appear in all copies of
+ * the Software and that both the above copyright notice(s) and this
+ * permission notice appear in supporting documentation.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+ * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
+ * OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
+ * HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
+ * INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
+ * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
+ * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
+ * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ *
+ * Except as contained in this notice, the name of a copyright holder
+ * shall not be used in advertising or otherwise to promote the sale, use
+ * or other dealings in this Software without prior written authorization
+ * of the copyright holder.
+ */ 
 
 #ifdef HAVE_DIX_CONFIG_H
 #include <dix-config.h>
@@ -183,6 +210,11 @@ static Bool TileScreenSaver(ScreenPtr pScreen, int kind);
 
 #define SubStrSend(pWin,pParent) (StrSend(pWin) || SubSend(pParent))
 
+#ifdef TSOL
+#include "extnsionst.h"
+extern SecurityHookPtr pSecHook;
+#endif /* TSOL */
+
 #ifdef COMPOSITE
 static const char *overlay_win_name = "<composite overlay>";
 #endif
@@ -1934,7 +1966,12 @@ IsSiblingAboveMe(
     return Below;
 }
 
-static BoxPtr
+#ifdef TSOL
+_X_EXPORT
+#else
+static
+#endif
+BoxPtr
 WindowExtents(
     WindowPtr pWin,
     BoxPtr pBox)
@@ -1964,7 +2001,12 @@ MakeBoundingRegion (
     return pRgn;
 }
 
-static Bool
+#ifdef TSOL
+_X_EXPORT
+#else
+static
+#endif
+Bool
 ShapeOverlap (
     WindowPtr	pWin,
     BoxPtr	pWinBox,
@@ -2164,7 +2206,12 @@ WhereDoIGoInTheStack(
     }
 }
 
-static void
+#ifdef TSOL
+_X_EXPORT
+#else
+static
+#endif
+void
 ReflectStackChange(
     WindowPtr pWin,
     WindowPtr pSib,
diff --git a/hw/xfree86/common/xf86Config.c b/hw/xfree86/common/xf86Config.c
index 87004df..1455dae 100644
--- a/hw/xfree86/common/xf86Config.c
+++ b/hw/xfree86/common/xf86Config.c
@@ -126,6 +126,7 @@ static ModuleDefault ModuleDefaults[] = {
     {.name = "dri2",     .toLoad = TRUE,    .load_opt=NULL},
 #endif
     {.name = "ia",       .toLoad = TRUE,    .load_opt=NULL},
+    {.name = "xtsol",    .toLoad = TRUE,    .load_opt=NULL},
     {.name = NULL,       .toLoad = FALSE,   .load_opt=NULL}
 };
 
diff --git a/hw/xfree86/dixmods/Makefile.am b/hw/xfree86/dixmods/Makefile.am
index 02a6d0d..00f8021 100644
--- a/hw/xfree86/dixmods/Makefile.am
+++ b/hw/xfree86/dixmods/Makefile.am
@@ -73,3 +73,11 @@ libia_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(top_builddir)/IA
 libia_la_LDFLAGS = -avoid-version
 libia_la_LIBADD = $(top_builddir)/IA/libIA.la
 libia_la_SOURCES = iamodule.c
+
+if BUILD_TSOL_MODULE
+# Sun Trusted Extensions extension module additions
+extsmodule_LTLIBRARIES += libxtsol.la
+libxtsol_la_LDFLAGS = -avoid-version
+libxtsol_la_LIBADD = $(top_builddir)/tsol/libxtsol.la $(PIXMAN_LIBS)
+libxtsol_la_SOURCES = tsolmodule.c
+endif
diff --git a/include/dix.h b/include/dix.h
index f3f68d3..45e4834 100644
--- a/include/dix.h
+++ b/include/dix.h
@@ -172,6 +172,15 @@ extern _X_EXPORT void MarkClientException(
     ClientPtr /*client*/);
 
 extern _X_HIDDEN Bool CreateConnectionBlock(void);
+ 
+#ifdef TSOL
+extern _X_EXPORT int DoGetImage(ClientPtr client, int format, Drawable drawable, 
+		      int x, int y, int width, int height, 
+		      Mask planemask, xGetImageReply **im_return);
+
+extern _X_EXPORT int GetGeometry(ClientPtr client, xGetGeometryReply *rep);
+#endif
+
 /* dixutils.c */
 
 extern _X_EXPORT int CompareISOLatin1Lowered(
diff --git a/include/extnsionst.h b/include/extnsionst.h
index aeefa99..de5e448 100644
--- a/include/extnsionst.h
+++ b/include/extnsionst.h
@@ -45,6 +45,34 @@ SOFTWARE.
 
 ******************************************************************/
 
+/* Copyright (c) 2006, 2007, Oracle and/or its affiliates. All rights reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the
+ * "Software"), to deal in the Software without restriction, including
+ * without limitation the rights to use, copy, modify, merge, publish,
+ * distribute, and/or sell copies of the Software, and to permit persons
+ * to whom the Software is furnished to do so, provided that the above
+ * copyright notice(s) and this permission notice appear in all copies of
+ * the Software and that both the above copyright notice(s) and this
+ * permission notice appear in supporting documentation.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+ * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
+ * OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
+ * HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
+ * INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
+ * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
+ * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
+ * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ *
+ * Except as contained in this notice, the name of a copyright holder
+ * shall not be used in advertising or otherwise to promote the sale, use
+ * or other dealings in this Software without prior written authorization
+ * of the copyright holder.
+ */ 
+
 #ifndef EXTENSIONSTRUCT_H
 #define EXTENSIONSTRUCT_H 
 
@@ -55,6 +83,10 @@ SOFTWARE.
 #include "gc.h"
 #include "privates.h"
 
+#ifdef TSOL
+#include "inputstr.h"
+#endif /* TSOL */
+
 typedef struct _ExtensionEntry {
     int index;
     void (* CloseDown)(	/* called at server shutdown */
@@ -108,5 +140,21 @@ extern _X_EXPORT Bool AddExtensionAlias(
 extern _X_EXPORT ExtensionEntry *CheckExtension(const char *extname);
 extern _X_EXPORT ExtensionEntry *GetExtensionEntry(int major);
 
+#ifdef TSOL
+typedef struct
+{
+    XID (*CheckAuthorization)(unsigned int, char *, unsigned int,
+        char *, ClientPtr , char **);
+    int (*ChangeWindowProperty)(ClientPtr, WindowPtr, Atom, Atom, int, int,
+        unsigned long, pointer, Bool);
+    int (*DeleteProperty)(ClientPtr, WindowPtr, Atom);
+    void (*DeleteClientFromAnySelections)(ClientPtr);
+    void (*DeleteWindowFromAnySelections)(WindowPtr);
+} SecurityHook, *SecurityHookPtr;
+
+extern _X_EXPORT SecurityHookPtr pSecHook;
+
+#endif /* TSOL */
+
 #endif /* EXTENSIONSTRUCT_H */
 
diff --git a/include/input.h b/include/input.h
index fb45617..93039c9 100644
--- a/include/input.h
+++ b/include/input.h
@@ -422,7 +422,7 @@ extern void NoteLedState(
     int /*led*/,
     Bool /*on*/);
 
-extern void MaybeStopHint(
+extern _X_EXPORT void MaybeStopHint(
     DeviceIntPtr /*device*/,
     ClientPtr /*client*/);
 
diff --git a/include/window.h b/include/window.h
index e13598b..8860dc7 100644
--- a/include/window.h
+++ b/include/window.h
@@ -269,4 +269,9 @@ extern _X_EXPORT void EnableMapUnmapEvents(
 extern _X_EXPORT void SetRootClip(ScreenPtr pScreen, Bool enable);
 extern _X_EXPORT void PrintWindowTree(void);
 
+#ifdef TSOL
+# include "validate.h" /* needed for VTKind enum definition */
+extern _X_EXPORT void ReflectStackChange(WindowPtr pWin, WindowPtr pSib, VTKind  kind);
+#endif
+
 #endif /* WINDOW_H */
diff --git a/mi/miinitext.c b/mi/miinitext.c
index b3c29fb..f3d5a33 100644
--- a/mi/miinitext.c
+++ b/mi/miinitext.c
@@ -66,6 +66,7 @@ SOFTWARE.
 #undef DAMAGE
 #undef COMPOSITE
 #undef MITSHM
+#undef TSOL
 #endif
 
 #ifdef HAVE_XNEST_CONFIG_H
@@ -157,6 +158,9 @@ extern Bool noGEExtension;
 #ifdef SolarisIAExtension
 Bool noIAExtension;
 #endif
+#ifdef TSOL
+Bool noXTSolExtension;
+#endif
 
 #ifndef XFree86LOADER
 #define INITARGS void
@@ -192,6 +196,9 @@ typedef void (*InitExtension)(INITARGS);
 #include <X11/extensions/interactive.h>
 #include "../IA/interactive_srv.h"
 #endif
+#ifdef TSOL
+#include "../tsol/tsolextension.h"
+#endif
 
 /* FIXME: this whole block of externs should be from the appropriate headers */
 #ifdef MITSHM
@@ -315,6 +322,9 @@ static ExtensionToggle ExtensionToggleList[] =
 #ifdef SolarisIAExtension
     { IANAME /* "SolarisIA" */, &noIAExtension },
 #endif
+#ifdef TSOL
+    { TSOLNAME /* "SUN_TSOL" */, &noXTSolExtension },
+#endif
 #ifdef RES
     { "X-Resource", &noResExtension },
 #endif
@@ -484,6 +494,11 @@ InitExtensions(int argc, char *argv[])
 #ifdef SolarisIAExtension
     if (!noIAExtension) IAExtensionInit();
 #endif
+#ifdef TSOL
+    if (!noXTSolExtension) {
+	TsolExtensionInit();
+    }
+#endif
 }
 
 #else /* XFree86LOADER */
diff --git a/os/connection.c b/os/connection.c
index 0e557a5..bb911f4 100644
--- a/os/connection.c
+++ b/os/connection.c
@@ -44,6 +44,33 @@ ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 SOFTWARE.
 
 ******************************************************************/
+/* Copyright (c) 2006, Oracle and/or its affiliates. All rights reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the
+ * "Software"), to deal in the Software without restriction, including
+ * without limitation the rights to use, copy, modify, merge, publish,
+ * distribute, and/or sell copies of the Software, and to permit persons
+ * to whom the Software is furnished to do so, provided that the above
+ * copyright notice(s) and this permission notice appear in all copies of
+ * the Software and that both the above copyright notice(s) and this
+ * permission notice appear in supporting documentation.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+ * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
+ * OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
+ * HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
+ * INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
+ * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
+ * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
+ * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ *
+ * Except as contained in this notice, the name of a copyright holder
+ * shall not be used in advertising or otherwise to promote the sale, use
+ * or other dealings in this Software without prior written authorization
+ * of the copyright holder.
+ */
 /*****************************************************************
  *  Stuff to create connections --- OS dependent
  *
@@ -255,6 +282,11 @@ static int		ListenTransCount;
 
 static void ErrorConnMax(XtransConnInfo /* trans_conn */);
 
+#ifdef TSOL
+#include "extnsionst.h"
+extern SecurityHookPtr pSecHook;
+#endif /* TSOL */
+
 static XtransConnInfo
 lookup_trans_conn (int fd)
 {
@@ -645,6 +677,12 @@ ClientAuthorized(ClientPtr client,
     priv = (OsCommPtr)client->osPrivate;
     trans_conn = priv->trans_conn;
 
+#ifdef TSOL
+    if (pSecHook)
+	auth_id = (*pSecHook->CheckAuthorization) (proto_n, auth_proto,
+				   string_n, auth_string, client, &reason);
+    else
+#endif /* TSOL */
     /* Allow any client to connect without authorization on a launchd socket,
        because it is securely created -- this prevents a race condition on launch */
     if(trans_conn->flags & TRANS_NOXAUTH) {
