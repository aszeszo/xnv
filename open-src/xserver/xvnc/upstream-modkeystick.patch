--- /dev/null	2009-12-17 01:29:23.000000000 -0800
+++ upstream-modkeystick.patch	2009-12-17 01:28:12.531376950 -0800
@@ -0,0 +1,34 @@
+open-src/xserver/xvnc/build_32/tigervnc-1.0.0
+--- unix/xserver/hw/vnc/Input.cc.orig	2009-12-16 17:23:13.298295400 -0800
++++ unix/xserver/hw/vnc/Input.cc	2009-12-16 17:14:56.292383650 -0800
+@@ -456,6 +456,14 @@
+ 	unsigned int i, n;
+ 	int j, k, action;
+ 
++	/* 
++	 * Since we are checking the current state to determine if we need
++	 * to fake modifiers, we must make sure that everything put on the
++	 * input queue is processed before we start. Otherwise, shift may be
++	 * stuck down.
++	 */ 
++	mieqProcessInputEvents();
++	
+ 	if (keysym == XK_Caps_Lock) {
+ 		vlog.debug("Ignoring caps lock");
+ 		goto cleanup;
+@@ -617,6 +625,15 @@
+ 		xfree(keymap);
+ 	}
+ #endif
++
++	/*
++	 * When faking a modifier we are putting a keycode (which can
++	 * currently activate the desired modifier) on the input
++	 * queue. A future modmap change can change the mapping so
++	 * that this keycode means something else entirely. Guard
++	 * against this by processing the queue now.
++	 */
++	mieqProcessInputEvents();
+ }
+ 
+ static KeySym KeyCodetoKeySym(KeySymsPtr keymap, int keycode, int col)
