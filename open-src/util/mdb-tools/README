We have created an mdb module and simple shell script wrapper that can
be used to get a list of the clients connected to an X server, the
sequence number of the last request it sent, and in the case of most
local clients, their process id. This can be run against either an
core dump or a live server.

This can be useful for trying to figure out which client is
responsible for the reads and writes you see to a certain file
descriptor in a truss and similar debugging activities. The sequence
number will basically be a count of the number of requests an X client
has sent during its lifetime.

Building
--------
Due to the different data structures used, there are different versions
for X servers based on the Xsun source (those delivered in /usr/openwin)
and for those based on the Xorg source (those delivered in /usr/X11).

Building these depends on headers in the X server sources which aren't
delivered in each server's SDK headers, so the Xsun one requires the
closed Xsun source, and the Xorg one requires at least having done 
"make source configure" in the open-src/xserver/xorg directory.

Once the sources are in place "make build_Xsun" builds the modules for
Xsun and creates a SVR4 package named XSUNdebug.   "make build_Xorg" 
similarly creates XORGdebug.   In the instructions that follow, if you're
using the Xsun version replace "XORG" with "XSUN" and "Xorg" with "Xsun".

Installation
------------

To install, simply copy the package directory to the target
machine and run (as root):

 # pkgadd -d . XORGdebug

(or Xsun debug as appropriate).

Scripts
-------

To run the simple front end script, simply find the process id of the running 
Xserver and run:
	/opt/XORGdebug/bin/list_Xorg_clients processid

You will get output like this:

max_clients = 1024
CLIENT SEQUENCE #  FD  PIDS
    0           0  -1 9719 
    1           8  15  ??? - NULL OsCommPtr->process
    2           9  16 9721 
    4           8  18  ??? - NULL OsCommPtr->process
    5          17 ??? - NULL ClientPtr->osPrivate
    6          14  19 9763 
    7          71  20 9814 
    8          13  21 9819 
    9          17  22 9836 
   10      501747  23 9837 
   11         147  24 9837 
   12          11  25 9837 
   13        9676  26 9843 
   14       38347  27 9843 
   15          11  28 9843 
   16       13251  29 9846 9857 9861 9871 
   18        5299  31 9847 9891 9894 9900 9904 9922 
   19        2397  32 9879 
   21          11  34 9879 
   23    34389507  36 9885 
 
1342  /usr/dt/bin/dtlogin -daemon
  9719  /usr/openwin/bin/Xorg :0 -depth 24 -nobanner -auth /var/dt/A:0-epayvc
  9721  /usr/openwin/bin/fbconsole -d :0
  9720  /usr/dt/bin/dtlogin -daemon
    9741  /bin/ksh /usr/dt/bin/Xsession
      9819  /usr/dt/bin/sdt_shell -c unsetenv _ PWD;             unsetenv DT;  
        9821  -csh -c unsetenv _ PWD;             unsetenv DT;      setenv DISP
          9837  /usr/dt/bin/dtsession
            9843  dtwm
            9846  /usr/dt/bin/dtterm -session dtb2aitb -C -ls
              9857  -csh
              9861  -csh
              9871  -csh
            9847  /usr/dt/bin/dtterm -session dtP2aqtb -C -ls
              9891  -csh
              9894  -csh
              9900  -csh
              9904  -csh
              9922  -csh
            9879  dtfile -session dtqRaOFb
              9949  dtfile -session dtqRaOFb
            9885  sdtperfmeter -f -H -t cpu -t disk -s 1 -name fpperfmeter
9836  /usr/dt/bin/ttsession

The output at the end comes from ptree. From this example we can see
the busiest client in this CDE session has been sdtperfmeter since it
has sent 34389507 X requests in order to update the performance meter
once a second. (This session was running for 6 days before this output
was taken.)

Similar scripts are included for listing which clients have active device
or server grabs:
	/opt/XORGdebug/bin/list_Xorg_devicegrab_client
	/opt/XORGdebug/bin/list_Xorg_servergrab_client
They should be documented here, but haven't been yet.

Debugging with mdb
------------------

The mdb module can also be used directly in an mdb debugging session
on either a live server or a core file.

Two dcmds are provided, a "walker" which simply iterates over the
entries in the Xorg clients table, and a command that prints the
information for each client.

You can run like this:

mdb -L %o:/opt/XORGdebug/lib/%i -p 9719
Loading modules: [ ld.so.1 libc.so.1 ]
> ::load Xorg_clients
> ::walk client_walk
max_clients = 1024
1b7db8
1b7dbc
1b7dc0
[...]
> 1b7dc0  ::client_pids
CLIENT SEQUENCE #  FD  PIDS
    2           9  16 9721 

If you run ::client_pids without an address in front, it will
automatically call the client_walk to list the information for all the
clients.

A similar module is provided for walking the device grabs table,
Xorg_device_grabs.so.  It should be documented here, but hasn't been yet.

=============================================================================

Copyright 2008 Sun Microsystems, Inc.  All rights reserved.
Use subject to license terms.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, and/or sell copies of the Software, and to permit persons
to whom the Software is furnished to do so, provided that the above
copyright notice(s) and this permission notice appear in all copies of
the Software and that both the above copyright notice(s) and this
permission notice appear in supporting documentation.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

Except as contained in this notice, the name of a copyright holder
shall not be used in advertising or otherwise to promote the sale, use
or other dealings in this Software without prior written authorization
of the copyright holder.
