diff -urpN src/common.h src/common.h
--- src/common.h	2010-12-23 08:53:04.297604253 +0800
+++ src/common.h	2010-12-23 08:53:39.330356975 +0800
@@ -325,6 +325,19 @@ extern int I810_DEBUG;
 #define PCI_CHIP_IGDNG_M_G_BRIDGE	0x0044
 #endif
 
+#ifndef	PCI_CHIP_SANDYBRIDGE
+#define PCI_CHIP_SANDYBRIDGE_BRIDGE 0x0100 /* Desktop */
+#define PCI_CHIP_SANDYBRIDGE_GT1 0x0102
+#define PCI_CHIP_SANDYBRIDGE_GT2 0x0112
+#define PCI_CHIP_SANDYBRIDGE_GT2_PLUS 0x0122
+#define PCI_CHIP_SANDYBRIDGE_BRIDGE_M 0x0104 /* Mobile */
+#define PCI_CHIP_SANDYBRIDGE_M_GT1 0x0106
+#define PCI_CHIP_SANDYBRIDGE_M_GT2 0x0116
+#define PCI_CHIP_SANDYBRIDGE_M_GT2_PLUS 0x0126
+#define PCI_CHIP_SANDYBRIDGE_BRIDGE_S 0x0108 /* Server */
+#define PCI_CHIP_SANDYBRIDGE_S_GT 0x010A
+#endif
+
 #define I810_MEMBASE(p,n) (p)->regions[(n)].base_addr
 #define VENDOR_ID(p)      (p)->vendor_id
 #define DEVICE_ID(p)      (p)->device_id
@@ -357,7 +370,7 @@ extern int I810_DEBUG;
 #define IS_IGDNG_D(pI810) (DEVICE_ID(pI810->PciInfo) == PCI_CHIP_IGDNG_D_G)
 #define IS_IGDNG_M(pI810) (DEVICE_ID(pI810->PciInfo) == PCI_CHIP_IGDNG_M_G)
 #define IS_IGDNG(pI810) (IS_IGDNG_D(pI810) || IS_IGDNG_M(pI810))
-#define IS_I965G(pI810) (DEVICE_ID(pI810->PciInfo) == PCI_CHIP_I965_G || DEVICE_ID(pI810->PciInfo) == PCI_CHIP_G35_G || DEVICE_ID(pI810->PciInfo) == PCI_CHIP_I965_Q || DEVICE_ID(pI810->PciInfo) == PCI_CHIP_I946_GZ || DEVICE_ID(pI810->PciInfo) == PCI_CHIP_I965_GM || DEVICE_ID(pI810->PciInfo) == PCI_CHIP_I965_GME || IS_G4X(pI810) || IS_IGDNG(pI810))
+#define IS_I965G(pI810) (DEVICE_ID(pI810->PciInfo) == PCI_CHIP_I965_G || DEVICE_ID(pI810->PciInfo) == PCI_CHIP_G35_G || DEVICE_ID(pI810->PciInfo) == PCI_CHIP_I965_Q || DEVICE_ID(pI810->PciInfo) == PCI_CHIP_I946_GZ || DEVICE_ID(pI810->PciInfo) == PCI_CHIP_I965_GM || DEVICE_ID(pI810->PciInfo) == PCI_CHIP_I965_GME || IS_G4X(pI810) || IS_IGDNG(pI810) || IS_GEN6(pI810))
 #define IS_G33CLASS(pI810) (DEVICE_ID(pI810->PciInfo) == PCI_CHIP_G33_G ||\
  			    DEVICE_ID(pI810->PciInfo) == PCI_CHIP_Q35_G ||\
 			    DEVICE_ID(pI810->PciInfo) == PCI_CHIP_Q33_G || \
@@ -365,6 +378,14 @@ extern int I810_DEBUG;
 #define IS_I9XX(pI810) (IS_I915G(pI810) || IS_I915GM(pI810) || IS_I945G(pI810) || IS_I945GM(pI810) || IS_I965G(pI810) || IS_G33CLASS(pI810))
 #define IS_I915(pI810) (IS_I915G(pI810) || IS_I915GM(pI810) || IS_I945G(pI810) || IS_I945GM(pI810) || IS_G33CLASS(pI810))
 
+#define IS_GEN6(pI810) ((pI810)->PciInfo->device_id == PCI_CHIP_SANDYBRIDGE_GT1 || \
+			(pI810)->PciInfo->device_id == PCI_CHIP_SANDYBRIDGE_GT2 || \
+			(pI810)->PciInfo->device_id == PCI_CHIP_SANDYBRIDGE_GT2_PLUS || \
+			(pI810)->PciInfo->device_id == PCI_CHIP_SANDYBRIDGE_M_GT1 ||\
+			(pI810)->PciInfo->device_id == PCI_CHIP_SANDYBRIDGE_M_GT2 || \
+			(pI810)->PciInfo->device_id == PCI_CHIP_SANDYBRIDGE_M_GT2_PLUS ||\
+			(pI810)->PciInfo->device_id == PCI_CHIP_SANDYBRIDGE_S_GT)
+
 #define IS_MOBILE(pI810) (IS_I830(pI810) || IS_I85X(pI810) || IS_I915GM(pI810) || IS_I945GM(pI810) || IS_I965GM(pI810) || IS_GM45(pI810) || IS_IGD(pI810) || IS_IGDNG_M(pI810))
 /* supports Y tiled surfaces (pre-965 Mesa isn't ready yet) */
 #define SUPPORTS_YTILING(pI810) (IS_I965G(intel))
diff -urpN src/i810_driver.c src/i810_driver.c
--- src/i810_driver.c	2010-12-23 08:53:04.268361075 +0800
+++ src/i810_driver.c	2010-12-23 08:53:21.594488013 +0800
@@ -140,6 +140,13 @@ static const struct pci_id_match intel_d
    INTEL_DEVICE_MATCH (PCI_CHIP_B43_G, 0 ),
    INTEL_DEVICE_MATCH (PCI_CHIP_IGDNG_D_G, 0 ),
    INTEL_DEVICE_MATCH (PCI_CHIP_IGDNG_M_G, 0 ),
+   INTEL_DEVICE_MATCH (PCI_CHIP_SANDYBRIDGE_GT1, 0 ),
+   INTEL_DEVICE_MATCH (PCI_CHIP_SANDYBRIDGE_GT2, 0 ),
+   INTEL_DEVICE_MATCH (PCI_CHIP_SANDYBRIDGE_GT2_PLUS, 0 ),
+   INTEL_DEVICE_MATCH (PCI_CHIP_SANDYBRIDGE_M_GT1, 0 ),
+   INTEL_DEVICE_MATCH (PCI_CHIP_SANDYBRIDGE_M_GT2, 0 ),
+   INTEL_DEVICE_MATCH (PCI_CHIP_SANDYBRIDGE_M_GT2_PLUS, 0 ),
+   INTEL_DEVICE_MATCH (PCI_CHIP_SANDYBRIDGE_S_GT, 0 ),
     { 0, 0, 0 },
 };
 
@@ -194,6 +201,13 @@ static SymTabRec I810Chipsets[] = {
    {PCI_CHIP_B43_G,		"B43"},
    {PCI_CHIP_IGDNG_D_G,		"Clarkdale"},
    {PCI_CHIP_IGDNG_M_G,		"Arrandale"},
+   {PCI_CHIP_SANDYBRIDGE_GT1,	"Sandybridge" },
+   {PCI_CHIP_SANDYBRIDGE_GT2,	"Sandybridge" },
+   {PCI_CHIP_SANDYBRIDGE_GT2_PLUS,	"Sandybridge" },
+   {PCI_CHIP_SANDYBRIDGE_M_GT1,	"Sandybridge" },
+   {PCI_CHIP_SANDYBRIDGE_M_GT2,	"Sandybridge" },
+   {PCI_CHIP_SANDYBRIDGE_M_GT2_PLUS,	"Sandybridge" },
+   {PCI_CHIP_SANDYBRIDGE_S_GT,	"Sandybridge" },
    {-1,				NULL}
 };
 
@@ -233,6 +247,13 @@ static PciChipsets I810PciChipsets[] = {
    {PCI_CHIP_B43_G,		PCI_CHIP_B43_G,		NULL},
    {PCI_CHIP_IGDNG_D_G,		PCI_CHIP_IGDNG_D_G,	NULL},
    {PCI_CHIP_IGDNG_M_G,		PCI_CHIP_IGDNG_M_G,	NULL},
+   {PCI_CHIP_SANDYBRIDGE_GT1,	PCI_CHIP_SANDYBRIDGE_GT1,	NULL},
+   {PCI_CHIP_SANDYBRIDGE_GT2,	PCI_CHIP_SANDYBRIDGE_GT2,	NULL},
+   {PCI_CHIP_SANDYBRIDGE_GT2_PLUS,	PCI_CHIP_SANDYBRIDGE_GT2_PLUS,	NULL},
+   {PCI_CHIP_SANDYBRIDGE_M_GT1,	PCI_CHIP_SANDYBRIDGE_M_GT1,	NULL},
+   {PCI_CHIP_SANDYBRIDGE_M_GT2,	PCI_CHIP_SANDYBRIDGE_M_GT2,	NULL},
+   {PCI_CHIP_SANDYBRIDGE_M_GT2_PLUS,	PCI_CHIP_SANDYBRIDGE_M_GT2_PLUS,	NULL},
+   {PCI_CHIP_SANDYBRIDGE_S_GT,	PCI_CHIP_SANDYBRIDGE_S_GT,	NULL},
    {-1,				-1, NULL }
 };
 
diff -urpN src/i830_driver.c src/i830_driver.c
--- src/i830_driver.c	2010-12-23 08:53:04.263637213 +0800
+++ src/i830_driver.c	2010-12-23 08:54:12.151058854 +0800
@@ -118,6 +118,13 @@ static SymTabRec I830Chipsets[] = {
    {PCI_CHIP_B43_G,		"B43"},
    {PCI_CHIP_IGDNG_D_G,		"Clarkdale"},
    {PCI_CHIP_IGDNG_M_G,		"Arrandale"},
+   {PCI_CHIP_SANDYBRIDGE_GT1,	"Sandybridge" },
+   {PCI_CHIP_SANDYBRIDGE_GT2,	"Sandybridge" },
+   {PCI_CHIP_SANDYBRIDGE_GT2_PLUS,	"Sandybridge" },
+   {PCI_CHIP_SANDYBRIDGE_M_GT1,	"Sandybridge" },
+   {PCI_CHIP_SANDYBRIDGE_M_GT2,	"Sandybridge" },
+   {PCI_CHIP_SANDYBRIDGE_M_GT2_PLUS,	"Sandybridge" },
+   {PCI_CHIP_SANDYBRIDGE_S_GT,	"Sandybridge" },
    {-1,				NULL}
 };
 
@@ -151,6 +158,13 @@ static PciChipsets I830PciChipsets[] = {
    {PCI_CHIP_B43_G,		PCI_CHIP_B43_G,		NULL},
    {PCI_CHIP_IGDNG_D_G,		PCI_CHIP_IGDNG_D_G,		NULL},
    {PCI_CHIP_IGDNG_M_G,		PCI_CHIP_IGDNG_M_G,		NULL},
+   {PCI_CHIP_SANDYBRIDGE_GT1,	PCI_CHIP_SANDYBRIDGE_GT1,	NULL},
+   {PCI_CHIP_SANDYBRIDGE_GT2,	PCI_CHIP_SANDYBRIDGE_GT2,	NULL},
+   {PCI_CHIP_SANDYBRIDGE_GT2_PLUS,	PCI_CHIP_SANDYBRIDGE_GT2_PLUS,	NULL},
+   {PCI_CHIP_SANDYBRIDGE_M_GT1,	PCI_CHIP_SANDYBRIDGE_M_GT1,	NULL},
+   {PCI_CHIP_SANDYBRIDGE_M_GT2,	PCI_CHIP_SANDYBRIDGE_M_GT2,	NULL},
+   {PCI_CHIP_SANDYBRIDGE_M_GT2_PLUS,	PCI_CHIP_SANDYBRIDGE_M_GT2_PLUS,	NULL},
+   {PCI_CHIP_SANDYBRIDGE_S_GT,	PCI_CHIP_SANDYBRIDGE_S_GT,	NULL},
    {-1,				-1,			NULL}
 };
 
@@ -622,6 +636,15 @@ static void i830_detect_chipset(ScrnInfo
 	case PCI_CHIP_IGDNG_M_G:
 		chipname = "Arrandale";
 		break;
+	case PCI_CHIP_SANDYBRIDGE_GT1:
+	case PCI_CHIP_SANDYBRIDGE_GT2:
+	case PCI_CHIP_SANDYBRIDGE_GT2_PLUS:
+	case PCI_CHIP_SANDYBRIDGE_M_GT1:
+	case PCI_CHIP_SANDYBRIDGE_M_GT2:
+	case PCI_CHIP_SANDYBRIDGE_M_GT2_PLUS:
+	case PCI_CHIP_SANDYBRIDGE_S_GT:
+		chipname = "Sandybridge";
+		break;
 	default:
 		chipname = "unknown chipset";
 		break;
diff -urpN src/i830_uxa.c src/i830_uxa.c
--- src/i830_uxa.c	2010-12-23 08:53:04.293859390 +0800
+++ src/i830_uxa.c	2010-12-23 08:53:21.595457423 +0800
@@ -199,6 +199,12 @@ i830_uxa_prepare_solid(PixmapPtr pixmap,
 		i830_get_pixmap_bo(pixmap),
 	};
 
+	if (IS_GEN6(intel)) {
+		intel_debug_fallback(scrn,
+		"Sandybridge BLT engine not supported\n");
+		return FALSE;
+	}
+
 	if (!UXA_PM_IS_SOLID(&pixmap->drawable, planemask)) {
 		intel_debug_fallback(scrn, "planemask is not solid\n");
 		return FALSE;
@@ -303,6 +309,12 @@ i830_uxa_prepare_copy(PixmapPtr source, 
 		i830_get_pixmap_bo(dest),
 	};
 
+	if (IS_GEN6(intel)) {
+		intel_debug_fallback(scrn,
+		"Sandybridge BLT engine not supported\n");
+		return FALSE;
+	}
+
 	if (!UXA_PM_IS_SOLID(&source->drawable, planemask)) {
 		intel_debug_fallback(scrn, "planemask is not solid");
 		return FALSE;
diff -urpN src/i965_render.c src/i965_render.c
--- src/i965_render.c	2010-12-23 08:53:04.290963841 +0800
+++ src/i965_render.c	2010-12-23 08:53:21.596099086 +0800
@@ -236,8 +236,14 @@ i965_check_composite(int op, PicturePtr 
 		     PicturePtr dest_picture)
 {
 	ScrnInfoPtr scrn = xf86Screens[dest_picture->pDrawable->pScreen->myNum];
+	intel_screen_private *intel = intel_get_screen_private(scrn);
 	uint32_t tmp1;
 
+	if (IS_GEN6(intel)) {
+		intel_debug_fallback(scrn, "Unsupported hardware\n");
+		return FALSE;
+	}
+
 	/* Check for unsupported compositing operations. */
 	if (op >= sizeof(i965_blend_op) / sizeof(i965_blend_op[0])) {
 		intel_debug_fallback(scrn,
diff -urpN src/common.h src/common.h
--- src/common.h	2010-12-23 09:02:19.224224337 +0800
+++ src/common.h	2010-12-23 09:06:36.641260370 +0800
@@ -390,6 +390,8 @@ extern int I810_DEBUG;
 /* supports Y tiled surfaces (pre-965 Mesa isn't ready yet) */
 #define SUPPORTS_YTILING(pI810) (IS_I965G(intel))
 
+#define	ALWAYS_TILING(intel)	(IS_GEN6(intel))
+
 #define GTT_PAGE_SIZE			KB(4)
 #define ROUND_TO(x, y)			(((x) + (y) - 1) / (y) * (y))
 #define ROUND_DOWN_TO(x, y)		((x) / (y) * (y))
diff -urpN src/i830_driver.c src/i830_driver.c
--- src/i830_driver.c	2010-12-23 09:02:19.217842847 +0800
+++ src/i830_driver.c	2010-12-23 09:05:51.154078132 +0800
@@ -1260,7 +1260,7 @@ I830ScreenInit(int scrnIndex, ScreenPtr 
 	intel->tiling = TRUE;
 
 	/* Allow user override if they set a value */
-	if (xf86IsOptionSet(intel->Options, OPTION_TILING)) {
+	if (!ALWAYS_TILING(intel) && xf86IsOptionSet(intel->Options, OPTION_TILING)) {
 		if (xf86ReturnOptValBool(intel->Options, OPTION_TILING, FALSE))
 			intel->tiling = TRUE;
 		else
@@ -1279,6 +1279,9 @@ I830ScreenInit(int scrnIndex, ScreenPtr 
 			intel->swapbuffers_wait = FALSE;
 	}
 
+	if (IS_GEN6(intel))
+		intel->swapbuffers_wait = FALSE;
+
 	xf86DrvMsg(scrn->scrnIndex, X_CONFIG, "Tiling %sabled\n",
 		   intel->tiling ? "en" : "dis");
 	xf86DrvMsg(scrn->scrnIndex, X_CONFIG, "SwapBuffers wait %sabled\n",
