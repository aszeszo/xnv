Port intel driver 2.10.0 to work with xorg-server-1.9, which removed 
WindowTable global and redefined ChangeGC & devPrivates.  
(Later intel drivers removed the i830_fill_colorkey code altogether.)

diff -Nurp -x '*~' -x '*.orig' src/i830_uxa.c src/i830_uxa.c
--- src/i830_uxa.c	2010-01-04 14:09:52.000000000 -0800
+++ src/i830_uxa.c	2010-07-26 20:18:43.828129652 -0700
@@ -78,7 +78,11 @@ const int I830PatternROP[16] = {
 	ROP_1
 };
 
+#if HAS_DEVPRIVATEKEYREC
+DevPrivateKeyRec uxa_pixmap_index;
+#else
 static int uxa_pixmap_index;
+#endif
 
 Bool
 i830_get_aperture_space(ScrnInfoPtr scrn, drm_intel_bo ** bo_table,
@@ -908,7 +912,11 @@ Bool i830_uxa_init(ScreenPtr screen)
 	ScrnInfoPtr scrn = xf86Screens[screen->myNum];
 	intel_screen_private *intel = intel_get_screen_private(scrn);
 
+#if HAS_DIXREGISTERPRIVATEKEY
+	if (!dixRegisterPrivateKey(&uxa_pixmap_index, PRIVATE_PIXMAP, 0))
+#else
 	if (!dixRequestPrivate(&uxa_pixmap_index, 0))
+#endif
 		return FALSE;
 
 	intel->uxa_driver = uxa_driver_alloc();
diff -Nurp -x '*~' -x '*.orig' src/i830_video.c src/i830_video.c
--- src/i830_video.c	2010-01-04 14:09:52.000000000 -0800
+++ src/i830_video.c	2010-07-26 20:18:43.828590726 -0700
@@ -1245,8 +1245,13 @@ i830_clip_video_helper(ScrnInfoPtr scrn,
 static void
 i830_fill_colorkey(ScreenPtr screen, uint32_t key, RegionPtr clipboxes)
 {
+#if GET_ABI_MAJOR(ABI_VIDEODRV_VERSION) >= 8 /* xorg-server 1.9 or later */
+	DrawablePtr root = &screen->root->drawable;
+	ChangeGCVal pval[2];
+#else
 	DrawablePtr root = &WindowTable[screen->myNum]->drawable;
 	XID pval[2];
+#endif
 	BoxPtr pbox = REGION_RECTS(clipboxes);
 	int i, nbox = REGION_NUM_RECTS(clipboxes);
 	xRectangle *rects;
@@ -1256,9 +1261,15 @@ i830_fill_colorkey(ScreenPtr screen, uin
 		return;
 
 	gc = GetScratchGC(root->depth, screen);
+#if GET_ABI_MAJOR(ABI_VIDEODRV_VERSION) >= 8 /* xorg-server 1.9 or later */
+	pval[0].val = key;
+	pval[1].val = IncludeInferiors;
+	ChangeGC(NullClient, gc, GCForeground | GCSubwindowMode, pval);
+#else
 	pval[0] = key;
 	pval[1] = IncludeInferiors;
 	(void)ChangeGC(gc, GCForeground | GCSubwindowMode, pval);
+#endif
 	ValidateGC(root, gc);
 
 	rects = xalloc(nbox * sizeof(xRectangle));

--- uxa/uxa.c	Mon Oct 25 10:27:27 2010
+++ uxa/uxa.c	Mon Oct 25 10:31:05 2010
@@ -39,7 +39,11 @@
 #include "dixfontstr.h"
 #include "uxa.h"
 
+#if HAS_DEVPRIVATEKEYREC
+DevPrivateKeyRec uxa_screen_index;
+#else
 int uxa_screen_index;
+#endif
 
 /**
  * uxa_get_drawable_pixmap() returns a backing pixmap for a given drawable.
@@ -460,6 +464,12 @@
 			   "non-NULL\n", screen->myNum);
 		return FALSE;
 	}
+
+#if HAS_DIXREGISTERPRIVATEKEY
+        if (!dixRegisterPrivateKey(&uxa_screen_index, PRIVATE_SCREEN, 0))
+            return FALSE;
+#endif
+
 #ifdef RENDER
 	ps = GetPictureScreenIfSet(screen);
 #endif
--- uxa/uxa-priv.h	Mon Oct 25 10:20:35 2010
+++ uxa/uxa-priv.h	Mon Oct 25 10:36:28 2010
@@ -187,11 +187,21 @@
     (PixmapWidthPaddingInfo[d].padRoundUp+1)))
 #endif
 
+#if HAS_DEVPRIVATEKEYREC
+extern DevPrivateKeyRec uxa_screen_index;
+#else
 extern int uxa_screen_index;
+#endif
+
 static inline uxa_screen_t *uxa_get_screen(ScreenPtr screen)
 {
+#if HAS_DEVPRIVATEKEYREC
+	return (uxa_screen_t *) dixGetPrivate(&screen->devPrivates,
+						 &uxa_screen_index);
+#else
 	return (uxa_screen_t *) dixLookupPrivate(&screen->devPrivates,
 						 &uxa_screen_index);
+#endif
 }
 
 /** Align an offset to an arbitrary alignment */
