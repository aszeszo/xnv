--- configure.ac	Wed Apr  8 14:05:14 2009
+++ configure.ac	Wed Apr  8 14:05:30 2009
@@ -84,7 +84,7 @@
 
 # Checks for pkg-config packages
 PKG_CHECK_MODULES(XORG, [xorg-server xproto fontsproto $REQUIRED_MODULES])
-PKG_CHECK_MODULES(UXA, [xorg-server >= 1.5], [BUILD_UXA=no], [BUILD_UXA=no])
+PKG_CHECK_MODULES(UXA, [xorg-server >= 1.5], [BUILD_UXA=yes], [BUILD_UXA=no])
 
 AC_ARG_WITH(xorg-sdk-dir,
 	AC_HELP_STRING([--with-xorg-sdk-dir=DIR],

--- uxa/uxa-accel.c	Mon Apr 13 13:37:17 2009
+++ uxa/uxa-accel.c	Mon Apr 13 13:41:50 2009
@@ -251,6 +251,63 @@
     return FALSE;
 }
 
+void
+miShmPutImage(dst, pGC, depth, format, w, h, sx, sy, sw, sh, dx, dy, data)
+    DrawablePtr dst;
+    GCPtr       pGC;
+    int         depth, w, h, sx, sy, sw, sh, dx, dy;
+    unsigned int format;
+    char        *data;
+{
+    PixmapPtr pmap;
+    GCPtr putGC;
+
+    putGC = GetScratchGC(depth, dst->pScreen);
+    if (!putGC)
+        return;
+    pmap = (*dst->pScreen->CreatePixmap)(dst->pScreen, sw, sh, depth, 0);
+    if (!pmap)
+    {
+        FreeScratchGC(putGC);
+        return;
+    }
+    ValidateGC((DrawablePtr)pmap, putGC);
+    (*putGC->ops->PutImage)((DrawablePtr)pmap, putGC, depth, -sx, -sy, w, h, 0,(format == XYPixmap) ? XYPixmap : ZPixmap, data);
+    FreeScratchGC(putGC);
+    if (format == XYBitmap)
+        (void)(*pGC->ops->CopyPlane)((DrawablePtr)pmap, dst, pGC, 0, 0, sw, sh,dx, dy, 1L);
+    else
+        (void)(*pGC->ops->CopyArea)((DrawablePtr)pmap, dst, pGC, 0, 0, sw, sh,dx, dy);
+    (*pmap->drawable.pScreen->DestroyPixmap)(pmap);
+}
+
+void
+fbShmPutImage(dst, pGC, depth, format, w, h, sx, sy, sw, sh, dx, dy, data)
+    DrawablePtr dst;
+    GCPtr       pGC;
+    int         depth, w, h, sx, sy, sw, sh, dx, dy;
+    unsigned int format;
+    char        *data;
+{
+    if ((format == ZPixmap) || (depth == 1))
+    {
+        PixmapPtr pPixmap;
+
+        pPixmap = GetScratchPixmapHeader(dst->pScreen, w, h, depth, /*XXX*/depth, PixmapBytePad(w, depth), (pointer)data);
+        if (!pPixmap)
+            return;
+        if (format == XYBitmap)
+            (void)(*pGC->ops->CopyPlane)((DrawablePtr)pPixmap, dst, pGC, sx, sy, sw, sh, dx, dy, 1L);
+        else
+            (void)(*pGC->ops->CopyArea)((DrawablePtr)pPixmap, dst, pGC, sx, sy, sw, sh, dx, dy);
+        FreeScratchPixmapHeader(pPixmap);
+    }
+    else
+        miShmPutImage(dst, pGC, depth, format, w, h, sx, sy, sw, sh, dx, dy, data);
+}
+
+
+
 /* The actual ShmPutImage isn't wrapped by the damage layer, so we need to
  * inform any interested parties of the damage incurred to the drawable.
  *
