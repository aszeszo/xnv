--- src/savage_hwmc.c	Mon Nov  9 11:47:21 2009
+++ src/savage_hwmc.c	Mon Nov  9 11:47:47 2009
@@ -28,7 +28,6 @@
 
 #include "xf86.h"
 #include "xf86_OSproc.h"
-#include "xf86Resources.h"
 #include "compiler.h"
 #include "xf86PciInfo.h"
 #include "xf86Pci.h"
--- src/savage_driver.h	Mon Nov  9 11:47:16 2009
+++ src/savage_driver.h	Mon Nov  9 11:47:29 2009
@@ -51,7 +51,6 @@
 #include "compiler.h"
 #include "vgaHW.h"
 #include "xf86.h"
-#include "xf86Resources.h"
 #include "xf86Pci.h"
 #include "xf86PciInfo.h"
 #include "xf86_OSproc.h"
--- configure.ac	Mon Nov  9 15:23:16 2009
+++ configure.ac	Mon Nov  9 15:24:04 2009
@@ -60,6 +60,11 @@
 
 # Checks for pkg-config packages
 PKG_CHECK_MODULES(XORG, [xorg-server >= 1.1.0 xproto fontsproto $REQUIRED_MODULES])
+PKG_CHECK_MODULES(XEXT, [xextproto >= 7.0.99.1],
+               HAVE_XEXTPROTO_71="yes"; AC_DEFINE(HAVE_XEXTPROTO_71, 1, [xextproto 7.1 available]),
+               HAVE_XEXTPROTO_71="no")
+AM_CONDITIONAL(HAVE_XEXTPROTO_71, [ test "$HAVE_XEXTPROTO_71" = "yes" ])
+
 sdkdir=$(pkg-config --variable=sdkdir xorg-server)
 
 # Checks for libraries.
--- src/savage_driver.c	Mon Nov  9 15:22:11 2009
+++ src/savage_driver.c	Mon Nov  9 15:29:37 2009
@@ -42,12 +42,15 @@
 #include <unistd.h>
 #include <errno.h>
 
-#include "xf86RAC.h"
 #include "shadowfb.h"
 
 #include "globals.h"
+#ifdef HAVE_XEXTPROTO_71
+#include <X11/extensions/dpmsconst.h>
+#else
 #define DPMS_SERVER
 #include <X11/extensions/dpms.h>
+#endif
 
 #include "xf86xv.h"
 
@@ -540,14 +543,6 @@
     if (!setupDone) {
 	setupDone = TRUE;
 	xf86AddDriver(&SAVAGE, module, 1);
-	LoaderRefSymLists(vgaHWSymbols, fbSymbols, ramdacSymbols, 
-			  xaaSymbols,
-			  exaSymbols,
-			  shadowSymbols, vbeSymbols, vbeOptSymbols,
-#ifdef XF86DRI
-                          drmSymbols, driSymbols,
-#endif
-			  int10Symbols, i2cSymbols, ddcSymbols, NULL);
 	return (pointer) 1;
     } else {
 	if (errmaj)
@@ -1050,7 +1045,6 @@
     /* Do the DDC dance. */ /* S3/VIA's DDC code */
     ddc = xf86LoadSubModule(pScrn, "ddc");
     if (ddc) {
-        xf86LoaderReqSymLists(ddcSymbols, NULL);
         switch( psav->Chipset ) {
             case S3_SAVAGE3D:
             case S3_SAVAGE_MX:
@@ -1072,7 +1066,6 @@
         if (!SavageDDC1(pScrn->scrnIndex)) {
             /* DDC1 failed,switch to DDC2 */
             if (xf86LoadSubModule(pScrn, "i2c")) {
-                xf86LoaderReqSymLists(i2cSymbols,NULL);
                 if (SavageI2CInit(pScrn)) {
                     unsigned char tmp;
                     xf86MonPtr pMon;
@@ -1274,7 +1267,6 @@
     if (!xf86LoadSubModule(pScrn, "vgahw"))
 	return FALSE;
 
-    xf86LoaderReqSymLists(vgaHWSymbols, NULL);
     if (!vgaHWGetHWRec(pScrn))
 	return FALSE;
 
@@ -1569,22 +1561,12 @@
     }
 
     pEnt = xf86GetEntityInfo(pScrn->entityList[0]);
-    if (pEnt->resources) {
-	xfree(pEnt);
-	SavageFreeRec(pScrn);
-	return FALSE;
-    }
     psav->EntityIndex = pEnt->index;
 
     if (xf86LoadSubModule(pScrn, "vbe")) {
-	xf86LoaderReqSymLists(vbeSymbols, NULL);
 	psav->pVbe = VBEInit(NULL, pEnt->index);
     }
 
-    xf86RegisterResources(pEnt->index, NULL, ResNone);
-    xf86SetOperatingState(resVgaIo, pEnt->index, ResUnusedOpr);
-    xf86SetOperatingState(resVgaMem, pEnt->index, ResDisableOpr);
-
     from = X_DEFAULT;
     if (pEnt->device->chipset && *pEnt->device->chipset) {
 	pScrn->chipset = pEnt->device->chipset;
@@ -2296,8 +2278,6 @@
 	return FALSE;
     }
 
-    xf86LoaderReqSymLists(fbSymbols, NULL);
-
     if( !psav->NoAccel ) {
 
         char *modName = NULL;
@@ -2331,8 +2311,6 @@
 	    } 
 	}
 
-	xf86LoaderReqSymLists(symNames, NULL );
-
     }
 
     if (psav->hwcursor) {
@@ -2342,7 +2320,6 @@
 	    psav->pVbe = NULL;
 	    return FALSE;
 	}
-	xf86LoaderReqSymLists(ramdacSymbols, NULL);
     }
 
     if (psav->shadowFB) {
@@ -2352,7 +2329,6 @@
 	    psav->pVbe = NULL;
 	    return FALSE;
 	}
-	xf86LoaderReqSymLists(shadowSymbols, NULL);
     }
     vbeFree(psav->pVbe);
 
@@ -4718,7 +4694,6 @@
     vbeInfoPtr pVbe;
     
     if (xf86LoadSubModule(pScrn, "vbe")) {
-	xf86LoaderReqSymLists(vbeSymbols, NULL);
 	pVbe = VBEInit(NULL, index);
 	ConfiguredMonitor = vbeDoEDID(pVbe, NULL);
 	vbeFree(pVbe);
