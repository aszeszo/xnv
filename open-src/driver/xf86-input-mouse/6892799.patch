# Copyright (c) 2009, Oracle and/or its affiliates. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

diff --git a/src/mouse.c b/src/mouse.c
index d981f6f..298f042 100644
--- a/src/mouse.c
+++ b/src/mouse.c
@@ -1614,13 +1614,14 @@ MouseProc(DeviceIntPtr device, int what)
 	ErrorF("assigning %p atom=%d name=%s\n", device, pInfo->atom,
 		pInfo->name);
 #endif
-	break;
-
-    case DEVICE_ON:
 	pInfo->fd = xf86OpenSerial(pInfo->options);
 	if (pInfo->fd == -1)
 	    xf86Msg(X_WARNING, "%s: cannot open input device\n", pInfo->name);
-	else {
+
+	break;
+
+    case DEVICE_ON:
+	if (pInfo->fd != -1) {
 	    if (pMse->xisbscale)
 		pMse->buffer = XisbNew(pInfo->fd, pMse->xisbscale * 4);
 	    else
@@ -1676,8 +1677,6 @@ MouseProc(DeviceIntPtr device, int what)
 		XisbFree(pMse->buffer);
 		pMse->buffer = NULL;
 	    }
-	    xf86CloseSerial(pInfo->fd);
-	    pInfo->fd = -1;
 	    if (pMse->emulate3Buttons || pMse->emulate3ButtonsSoft)
 	    {
 		RemoveBlockAndWakeupHandlers (MouseBlockHandler,
@@ -1688,6 +1687,10 @@ MouseProc(DeviceIntPtr device, int what)
 	device->public.on = FALSE;
 	break;
     case DEVICE_CLOSE:
+ 	if (pInfo->fd != -1) {
+	    xf86CloseSerial(pInfo->fd);
+	    pInfo->fd = -1;
+	}
 	free(pMse->mousePriv);
 	pMse->mousePriv = NULL;
 	break;
