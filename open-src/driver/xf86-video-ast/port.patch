--- src/ast_accel.c	Tue Nov 10 12:51:02 2009
+++ src/ast_accel.c	Tue Nov 10 12:51:10 2009
@@ -25,8 +25,6 @@
 #endif
 #include "xf86.h"
 #include "xf86_OSproc.h"
-#include "xf86Resources.h"
-#include "xf86RAC.h"
 #include "xf86cmap.h"
 #include "compiler.h"
 #include "mibstore.h"
--- src/ast_cursor.c	Tue Nov 10 12:51:25 2009
+++ src/ast_cursor.c	Tue Nov 10 12:51:33 2009
@@ -25,8 +25,6 @@
 #endif
 #include "xf86.h"
 #include "xf86_OSproc.h"
-#include "xf86Resources.h"
-#include "xf86RAC.h"
 #include "xf86cmap.h"
 #include "compiler.h"
 #include "mibstore.h"
--- src/ast_driver.c	Tue Nov 10 12:51:52 2009
+++ src/ast_driver.c	Tue Nov 10 12:55:34 2009
@@ -25,8 +25,10 @@
 #endif
 #include "xf86.h"
 #include "xf86_OSproc.h"
+#if GET_ABI_MAJOR(ABI_VIDEODRV_VERSION) < 6
 #include "xf86Resources.h"
 #include "xf86RAC.h"
+#endif
 #include "xf86cmap.h"
 #include "compiler.h"
 #include "mibstore.h"
@@ -288,19 +290,6 @@
       xf86AddDriver(&AST, module, 0);
 
       /*
-       * Tell the loader about symbols from other modules that this module
-       * might refer to.
-       */
-#if !(defined(__sparc__))       
-      LoaderRefSymLists(vgahwSymbols,
-			fbSymbols, xaaSymbols, ramdacSymbols,
-			vbeSymbols, vbeOptionalSymbols,
-			ddcSymbols, int10Symbols, NULL);
-#else
-      LoaderRefSymLists(fbSymbols, xaaSymbols, ramdacSymbols, ddcSymbols, NULL);
-#endif
-
-      /*
        * The return value must be non-NULL on success even though there
        * is no TearDownProc.
        */
@@ -485,20 +474,20 @@
    if (pEnt->location.type != BUS_PCI)
        return FALSE;
 
+#ifndef XSERVER_LIBPCIACCESS
    if (xf86RegisterResources(pEnt->index, 0, ResExclusive))
        return FALSE;
+#endif
 
 #if !(defined(__sparc__))       
    /* The vgahw module should be loaded here when needed */
    if (!xf86LoadSubModule(pScrn, "vgahw"))
       return FALSE;
-   xf86LoaderReqSymLists(vgahwSymbols, NULL);
 #endif
 
    /* The fb module should be loaded here when needed */
    if (!xf86LoadSubModule(pScrn, "fb"))
       return FALSE;
-   xf86LoaderReqSymLists(fbSymbols, NULL);      
    	
 #if !(defined(__sparc__))             	
    /* Allocate a vgaHWRec */
@@ -542,8 +531,10 @@
    pScrn->progClock = TRUE;
    pScrn->rgbBits = 6;
    pScrn->monitor = pScrn->confScreen->monitor; /* should be initialized before set gamma */
+#ifndef XSERVER_LIBPCIACCESS
    pScrn->racMemFlags = RAC_FB | RAC_COLORMAP | RAC_CURSOR | RAC_VIEWPORT;
    pScrn->racIoFlags = RAC_COLORMAP | RAC_CURSOR | RAC_VIEWPORT;   
+#endif
       
    /*
     * If the driver can do gamma correction, it should call xf86SetGamma()
@@ -691,7 +682,6 @@
 #else
        if (xf86LoadSubModule(pScrn, "int10")) {
  	       xf86Int10InfoPtr pInt10;
-	       xf86LoaderReqSymLists(int10Symbols, NULL);
 	       xf86DrvMsg(pScrn->scrnIndex,X_INFO,"initializing int10\n");
 	       pInt10 = xf86InitInt10(pAST->pEnt->index);
 	       xf86FreeInt10(pInt10);
@@ -797,7 +787,6 @@
 	   ASTFreeRec(pScrn);
 	   return FALSE;
        }       
-       xf86LoaderReqSymLists(xaaSymbols, NULL);
        
        pAST->noAccel = FALSE; 
        
@@ -831,7 +820,6 @@
 	 ASTFreeRec(pScrn);
 	 return FALSE;
       }
-      xf86LoaderReqSymLists(ramdacSymbols, NULL);
       
       pAST->noHWC = FALSE;  
       pAST->HWCInfo.HWC_NUM = DEFAULT_HWC_NUM;
@@ -843,8 +831,10 @@
 #endif
 
    /*  We won't be using the VGA access after the probe */
+#ifndef XSERVER_LIBPCIACCESS
    xf86SetOperatingState(resVgaIo, pAST->pEnt->index, ResUnusedOpr);
    xf86SetOperatingState(resVgaMem, pAST->pEnt->index, ResDisableOpr);
+#endif
 
    return TRUE;
 }
@@ -1333,7 +1323,6 @@
 #if defined(__sparc__)
    if ((xf86LoadSubModule(pScrn, "ddc")) && (GetVGAEDID(pScrn, DDC_data) == TRUE))
    {
-      xf86LoaderReqSymLists(ddcSymbols, NULL);
       ConfiguredMonitor = xf86InterpretEDID(pScrn->scrnIndex, DDC_data);
    }	
    else
@@ -1376,7 +1365,6 @@
    }
 
    if (xf86LoadSubModule(pScrn, "vbe") && (pVbe = VBEInit(NULL, index))) {
-      xf86LoaderReqSymLists(vbeSymbols, NULL);
       MonInfo1 = vbeDoEDID(pVbe, NULL);
       MonInfo = MonInfo1;
       
@@ -1541,7 +1529,6 @@
 
    if ((xf86LoadSubModule(pScrn, "ddc")) && (GetVGAEDID(pScrn, DDC_data) == TRUE))
    {
-      xf86LoaderReqSymLists(ddcSymbols, NULL);
       MonInfo = xf86InterpretEDID(pScrn->scrnIndex, DDC_data);
 
       xf86PrintEDID(MonInfo);
--- src/ast_mode.c	Tue Nov 10 12:55:44 2009
+++ src/ast_mode.c	Tue Nov 10 12:55:50 2009
@@ -25,8 +25,6 @@
 #endif
 #include "xf86.h"
 #include "xf86_OSproc.h"
-#include "xf86Resources.h"
-#include "xf86RAC.h"
 #include "xf86cmap.h"
 #include "compiler.h"
 #include "mibstore.h"
--- src/ast_tool.c	Tue Nov 10 12:55:58 2009
+++ src/ast_tool.c	Tue Nov 10 12:56:06 2009
@@ -25,8 +25,6 @@
 #endif
 #include "xf86.h"
 #include "xf86_OSproc.h"
-#include "xf86Resources.h"
-#include "xf86RAC.h"
 #include "xf86cmap.h"
 #include "compiler.h"
 #include "mibstore.h"
--- src/ast_vgatool.c	Tue Nov 10 12:56:13 2009
+++ src/ast_vgatool.c	Tue Nov 10 12:56:20 2009
@@ -25,8 +25,6 @@
 #endif
 #include "xf86.h"
 #include "xf86_OSproc.h"
-#include "xf86Resources.h"
-#include "xf86RAC.h"
 #include "xf86cmap.h"
 #include "compiler.h"
 #include "mibstore.h"
--- src/ast_2dtool.c	Tue Nov 10 13:02:52 2009
+++ src/ast_2dtool.c	Tue Nov 10 12:56:53 2009
@@ -25,8 +25,6 @@
 #endif
 #include "xf86.h"
 #include "xf86_OSproc.h"
-#include "xf86Resources.h"
-#include "xf86RAC.h"
 #include "xf86cmap.h"
 #include "compiler.h"
 #include "mibstore.h"
