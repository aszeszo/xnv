/*
 * Copyright 2006 Sun Microsystems, Inc.  All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, and/or sell copies of the Software, and to permit persons
 * to whom the Software is furnished to do so, provided that the above
 * copyright notice(s) and this permission notice appear in all copies of
 * the Software and that both the above copyright notice(s) and this
 * permission notice appear in supporting documentation.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
 * OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
 * INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
 * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Except as contained in this notice, the name of a copyright holder
 * shall not be used in advertising or otherwise to promote the sale, use
 * or other dealings in this Software without prior written authorization
 * of the copyright holder.
 *
 */

Various fixes to deal with where we install things on Solaris:

- Only run hacks from the hacks dir, not $PATH

- Find helper programs even though they are not in $PATH

- Show author names when reading RSS feeds from sites like blogs.sun.com

diff -urp -x '*~' driver/Makefile.in driver/Makefile.in
--- driver/Makefile.in	2006-05-23 16:01:35.000000000 -0700
+++ driver/Makefile.in	2006-08-09 15:42:26.024807000 -0700
@@ -26,7 +26,7 @@ INTLTOOL_MERGE	= @INTLTOOL_MERGE@
 GTK_DATADIR	= @GTK_DATADIR@
 GTK_APPDIR	= $(GTK_DATADIR)/applications
 GTK_ICONDIR	= $(GTK_DATADIR)/pixmaps
-GTK_GLADEDIR	= $(GTK_DATADIR)/xscreensaver/glade
+GTK_GLADEDIR	= $(prefix)/lib/xscreensaver/config
 HACK_CONF_DIR	= @HACK_CONF_DIR@
 
 CC		= @CC@
@@ -35,8 +35,11 @@ CFLAGS		= @CFLAGS@
 LDFLAGS		= @LDFLAGS@
 DEFS		= @DEFS@
 INTL_DEFS	= -DLOCALEDIR=\"$(localedir)\"
-SUBP_DEFS	= $(DEFS) -DDEFAULT_PATH_PREFIX='"@HACKDIR@"'
-GTK_DEFS	= $(DEFS) -DDEFAULT_ICONDIR='"$(GTK_GLADEDIR)"'
+SUBP_DEFS	= $(DEFS) -DHACK_PATH='"@HACKDIR@"' \
+	-DDEFAULT_PATH_PREFIX='"@HACKDIR@:$(libexecdir)"' \
+	-DHELPER_PATH='"$(libexecdir)"'
+GTK_DEFS	= $(DEFS) -DDEFAULT_ICONDIR='"$(GTK_GLADEDIR)"' \
+			-DBINDIR='"$(bindir)"'
 CONF_DEFS	= -DHACK_CONFIGURATION_PATH='"$(HACK_CONF_DIR)"'
 
 LIBS		= @LIBS@
diff -urp -x '*~' driver/XScreenSaver.ad.in driver/XScreenSaver.ad.in
--- driver/XScreenSaver.ad.in	2006-08-09 15:42:21.902455000 -0700
+++ driver/XScreenSaver.ad.in	2006-08-09 15:44:48.663894000 -0700
@@ -96,7 +96,7 @@ GetViewPortIsFullOfLies: False
 !
 @GNOME24@*loadURL: gnome-open '%s'
 @GNOME24@*manualCommand: gnome-terminal --title '%s manual' \
-@GNOME24@		--command '/bin/sh -c "man %s; read foo"'
+@GNOME24@		--command '/bin/sh -c "man -M /usr/X11/man %s; read foo"'
 !
 !   Gnome 2.2:
 !
diff -urp -x '*~' driver/demo-Gtk.c driver/demo-Gtk.c
--- driver/demo-Gtk.c	2006-05-23 15:02:44.000000000 -0700
+++ driver/demo-Gtk.c	2006-08-09 15:42:26.027370000 -0700
@@ -924,7 +924,7 @@ restart_menu_cb (GtkWidget *widget, gpoi
   flush_dialog_changes_and_save (s);
   xscreensaver_command (GDK_DISPLAY(), XA_EXIT, 0, False, NULL);
   sleep (1);
-  if (system ("xscreensaver -nosplash &") < 0)
+  if (system (BINDIR "/xscreensaver -nosplash &") < 0)
     fprintf (stderr, "%s: fork error\n", blurb());
 
   await_xscreensaver (s);
@@ -4745,7 +4745,7 @@ main (int argc, char **argv)
 
       if (init_results == 1)
 	{
-	  system ("xscreensaver -nosplash &");
+	  system (BINDIR "/xscreensaver -nosplash &");
 	  return 0;
 	}
 
diff -urp -x '*~' driver/subprocs.c driver/subprocs.c
--- driver/subprocs.c	2006-03-07 21:52:23.000000000 -0800
+++ driver/subprocs.c	2006-08-09 15:42:26.052932000 -0700
@@ -14,6 +14,7 @@
 # include "config.h"
 #endif
 
+#include <sys/stat.h>
 #include <ctype.h>
 #include <stdio.h>
 #include <string.h>
@@ -775,6 +776,8 @@ print_path_error (const char *program)
   free (cmd);
   perror (buf);
 
+/* mali - security issue do not want to display user's path */
+#ifdef EXPOSE_USER_PATH  
   if (errno == ENOENT &&
       (token = getenv("PATH")))
     {
@@ -805,6 +808,7 @@ print_path_error (const char *program)
         }
       fprintf (stderr, "\n");
     }
+#endif
 }
 
 
@@ -867,6 +871,8 @@ spawn_screenhack_1 (saver_screen_info *s
 {
   saver_info *si = ssi->global;
   saver_preferences *p = &si->prefs;
+  char* complete_hack_command;
+  
   raise_window (si, first_time_p, True, False);
   XFlush (si->dpy);
 
@@ -985,7 +991,17 @@ spawn_screenhack_1 (saver_screen_info *s
       if (si->selection_mode < 0)
 	si->selection_mode = 0;
 
-      forked = fork_and_exec (ssi, hack->command);
+      
+      /* We need complete path to hack command else any executable
+       * with the same name in the path gets executed.
+       */
+      complete_hack_command = malloc (10 + strlen(hack->command) +
+					      strlen (HACK_PATH)); 
+      sprintf(complete_hack_command, HACK_PATH"/%s", hack->command);
+      
+      
+      forked = fork_and_exec (ssi, complete_hack_command);
+      free (complete_hack_command);
       switch ((int) forked)
 	{
 	case -1: /* fork failed */
@@ -1003,10 +1019,41 @@ spawn_screenhack_1 (saver_screen_info *s
     }
 }
 
+Bool
+check_if_hacks_dir_exists(void)
+{
+  const char hackdir[] = HACK_PATH;
+
+  int status;
+  struct stat st;
+
+  status = stat (hackdir, &st);
+  
+  if (status == 0 && S_ISDIR(st.st_mode))
+    {
+     return True;
+    }
+   else
+    {
+     fprintf(stderr, "\t*** Warning: dir: %s missing. Will not run hacks\n",
+			hackdir);
+     return False;
+    }
+}
+
 
 void
 spawn_screenhack (saver_info *si, Bool first_time_p)
 {
+  if (si->prefs.verbose_p)
+   fprintf(stderr, "--> spawn_screenhack()\n");
+
+  if (check_if_hacks_dir_exists() == False)
+   {
+    store_saver_status (si);  /* store current hack numbers */
+    return;
+   }
+
   if (monitor_powered_on_p (si))
     {
       int i;
@@ -1186,7 +1233,7 @@ get_best_gl_visual (saver_screen_info *s
   char *av[10];
   int ac = 0;
 
-  av[ac++] = "xscreensaver-gl-helper";
+  av[ac++] = HELPER_PATH "/xscreensaver-gl-helper";
   av[ac] = 0;
 
   if (pipe (fds))
diff -urp -x '*~' driver/xscreensaver-text driver/xscreensaver-text
--- driver/xscreensaver-text	2006-04-14 19:29:49.000000000 -0700
+++ driver/xscreensaver-text	2006-08-09 15:42:26.053609000 -0700
@@ -374,6 +374,10 @@ sub output() {
       system ("cat", "/etc/redhat-release");
     }
 
+    if (-f "/etc/release") {	    	    # "Solaris 10 3/05 s10_74L2a X86"
+      safe_system ("head", "-1", "/etc/release");
+    }
+
     if (-f "/usr/sbin/system_profiler") {   # "Mac OS X 10.4.5 (8H14)"
       my $sp =				    # "iMac G5"
         `/usr/sbin/system_profiler SPSoftwareDataType SPHardwareDataType`;
@@ -660,12 +664,15 @@ sub reformat_rss($) {
     $i++;
 
     my ($title, $body1, $body2, $body3);
+    my $author;
     
     $title = $3 if (m@<((TITLE)       [^<>\s]*)[^<>]*>\s*(.*?)\s*</\1>@xsi);
     $body1 = $3 if (m@<((DESCRIPTION) [^<>\s]*)[^<>]*>\s*(.*?)\s*</\1>@xsi);
     $body2 = $3 if (m@<((CONTENT)     [^<>\s]*)[^<>]*>\s*(.*?)\s*</\1>@xsi);
     $body3 = $3 if (m@<((SUMMARY)     [^<>\s]*)[^<>]*>\s*(.*?)\s*</\1>@xsi);
 
+    $author = $3 if (m@<((DC:CREATOR) [^<>\s]*)[^<>]*>\s*(.*?)\s*</\1>@xsi);
+
     # If there are both <description> and <content> or <content:encoded>,
     # use whichever one contains more text.
     #
@@ -689,8 +696,9 @@ sub reformat_rss($) {
 
     $title = rss_field_to_html ($title || '');
     $body1 = rss_field_to_html ($body1 || '');
+    $author = rss_field_to_html ($author || '');
 
-    reformat_html ("$title<P>$body1", 1);
+    reformat_html ("$title<BR>$author<P>$body1", 1);
     print "\n";
   }
 }
