/*
 * Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, and/or sell copies of the Software, and to permit persons
 * to whom the Software is furnished to do so, provided that the above
 * copyright notice(s) and this permission notice appear in all copies of
 * the Software and that both the above copyright notice(s) and this
 * permission notice appear in supporting documentation.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
 * OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
 * INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
 * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Except as contained in this notice, the name of a copyright holder
 * shall not be used in advertising or otherwise to promote the sale, use
 * or other dealings in this Software without prior written authorization
 * of the copyright holder.
 *
 */

*** driver/lock.c.orig	Thu Feb 26 16:06:57 2009
--- driver/lock.c	Thu Feb 26 08:08:23 2009
***************
*** 52,57 ****
--- 52,60 ----
    static void xfree_lock_grab_smasher (saver_info *si, Bool lock_p);
  #endif /* HAVE_XF86MISCSETGRABKEYSSTATE */
  
+ #ifdef HAVE_RANDR
+ #include <X11/extensions/Xrandr.h>
+ #endif /* HAVE_RANDR */
  
  #ifdef _VROOT_H_
  ERROR!  You must not include vroot.h in this file.
***************
*** 2023,2028 ****
--- 2026,2071 ----
    while (si->pw_data && si->pw_data->state == pw_read)
      {
        XtAppNextEvent (si->app, &event);
+ #ifdef HAVE_RANDR
+ 	/*
+ 	 * 6757448 xscreensaver doesn't notice XRandR resize events.
+ 	 */
+         if (event.type == (si->randr_event_number + RRScreenChangeNotify))
+           {
+             /* The Resize and Rotate extension sends an event when the
+                size, rotation, or refresh rate of the screen has changed. */
+ 
+             XRRScreenChangeNotifyEvent *xrr_event =
+               (XRRScreenChangeNotifyEvent *) &event;
+             /* XRRRootToScreen is in Xrandr.h 1.4, 2001/06/07 */
+             int screen = XRRRootToScreen (si->dpy, xrr_event->window);
+ 
+             if (p->verbose_p)
+               {
+                 if (si->screens[screen].width  == xrr_event->width &&
+                     si->screens[screen].height == xrr_event->height)
+                   fprintf (stderr,
+                           "%s: %d: no-op screen size change event (%dx%d)\n",
+                            blurb(), screen,
+                            xrr_event->width, xrr_event->height);
+                 else
+                   fprintf (stderr,
+                        "%s: %d: screen size changed from %dx%d to %dx%d\n",
+                            blurb(), screen,
+                            si->screens[screen].width,
+                            si->screens[screen].height,
+                            xrr_event->width, xrr_event->height);
+               }
+ 
+ # ifdef RRScreenChangeNotifyMask
+             /* Inform Xlib that it's ok to update its data structures. */
+             XRRUpdateConfiguration (&event); /* Xrandr.h 1.9, 2002/09/29 */
+ # endif /* RRScreenChangeNotifyMask */
+             /* Resize the existing xscreensaver windows and cached ssi data. */
+             resize_screensaver_window (si);
+           }
+ #endif /* HAVE_RANDR */
+ 
  #ifdef HAVE_XSCREENSAVER_LOCK
        if (event.xany.type == KeyPress)
  	{
