/*
 * Copyright 2006 Sun Microsystems, Inc.  All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, and/or sell copies of the Software, and to permit persons
 * to whom the Software is furnished to do so, provided that the above
 * copyright notice(s) and this permission notice appear in all copies of
 * the Software and that both the above copyright notice(s) and this
 * permission notice appear in supporting documentation.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
 * OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
 * INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
 * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Except as contained in this notice, the name of a copyright holder
 * shall not be used in advertising or otherwise to promote the sale, use
 * or other dealings in this Software without prior written authorization
 * of the copyright holder.
 *
 */

4832530 - xscreensaver shows improper message if no libGL installed
Capture stderr from subproc in get_best_gl_visual


diff -urp -x '*~' driver/subprocs.c driver/subprocs.c
--- driver/subprocs.c	2006-08-08 17:27:03.422319000 -0700
+++ driver/subprocs.c	2006-08-08 17:27:08.533828000 -0700
@@ -1255,6 +1255,10 @@ get_best_gl_visual (saver_screen_info *s
   pid_t forked;
   int fds [2];
   int in, out;
+/* Begin: SUN addition: capture stderr as well */
+  int errfds[2];
+  int errin, errout;
+/* End: SUN addition: capture stderr as well */
   char buf[1024];
 
   char *av[10];
@@ -1272,6 +1276,20 @@ get_best_gl_visual (saver_screen_info *s
   in = fds [0];
   out = fds [1];
 
+/* Begin: SUN addition: capture stderr as well */ 
+  if (!si->prefs.verbose_p) 
+    {
+      if (pipe (errfds))
+        {
+          perror ("error creating pipe:");
+          return 0;
+        }
+
+      errin = errfds [0];
+      errout = errfds [1];
+    }
+/* End: SUN addition: capture stderr as well */ 
+
   switch ((int) (forked = fork ()))
     {
     case -1:
@@ -1292,6 +1310,17 @@ get_best_gl_visual (saver_screen_info *s
             perror ("could not dup() a new stdout:");
             return 0;
           }
+/* Begin: SUN addition: capture stderr as well */
+	if (! si->prefs.verbose_p) 
+	  {
+	    close(errin);
+	    if (dup2 (errout, STDERR_FILENO) < 0)
+	      {
+                perror ("could not dup() a new stderr:");
+		return 0;
+	      }
+	  }
+/* End: SUN addition: capture stderr as well */
         hack_subproc_environment (ssi);		/* set $DISPLAY */
 
         execvp (av[0], av);			/* shouldn't return. */
@@ -1322,6 +1351,14 @@ get_best_gl_visual (saver_screen_info *s
           *buf = 0;
         fclose (f);
 
+/* Begin: SUN addition: capture stderr as well */
+        if (! si->prefs.verbose_p) 
+          {
+            close (errout);
+            close (errin);
+          }
+/* End: SUN addition: capture stderr as well */
+
         /* Wait for the child to die. */
         waitpid (-1, &wait_status, 0);
 
